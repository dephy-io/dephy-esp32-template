<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
  <vendor>ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.</vendor>
  <vendorID>ESPRESSIF</vendorID>
  <name>ESP32-C3</name>
  <series>ESP32-C3</series>
  <version>10</version>
  <description>32-bit RISC-V MCU &amp; 2.4 GHz Wi-Fi &amp; Bluetooth 5 (LE)</description>
  <licenseText>
    Copyright 2022 Espressif Systems (Shanghai) PTE LTD

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
</licenseText>
  <cpu>
    <name>RV32IMC</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>4</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>32</addressUnitBits>
  <width>32</width>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>AES</name>
      <description>AES (Advanced Encryption Standard) Accelerator</description>
      <groupName>AES</groupName>
      <baseAddress>0x6003A000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xBC</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>AES</name>
        <value>48</value>
      </interrupt>
      <registers>
        <register>
          <name>KEY_0</name>
          <description>Key material key_0 configure register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_0</name>
              <description>This bits stores key_0 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_1</name>
          <description>Key material key_1 configure register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_1</name>
              <description>This bits stores key_1 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_2</name>
          <description>Key material key_2 configure register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_2</name>
              <description>This bits stores key_2 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_3</name>
          <description>Key material key_3 configure register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_3</name>
              <description>This bits stores key_3 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_4</name>
          <description>Key material key_4 configure register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_4</name>
              <description>This bits stores key_4 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_5</name>
          <description>Key material key_5 configure register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_5</name>
              <description>This bits stores key_5 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_6</name>
          <description>Key material key_6 configure register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_6</name>
              <description>This bits stores key_6 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEY_7</name>
          <description>Key material key_7 configure register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_7</name>
              <description>This bits stores key_7 that is a part of key material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_IN_0</name>
          <description>source text material text_in_0 configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_IN_0</name>
              <description>This bits stores text_in_0 that is a part of source text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_IN_1</name>
          <description>source text material text_in_1 configure register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_IN_1</name>
              <description>This bits stores text_in_1 that is a part of source text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_IN_2</name>
          <description>source text material text_in_2 configure register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_IN_2</name>
              <description>This bits stores text_in_2 that is a part of source text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_IN_3</name>
          <description>source text material text_in_3 configure register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_IN_3</name>
              <description>This bits stores text_in_3 that is a part of source text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_OUT_0</name>
          <description>result text material text_out_0 configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_OUT_0</name>
              <description>This bits stores text_out_0 that is a part of result text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_OUT_1</name>
          <description>result text material text_out_1 configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_OUT_1</name>
              <description>This bits stores text_out_1 that is a part of result text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_OUT_2</name>
          <description>result text material text_out_2 configure register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_OUT_2</name>
              <description>This bits stores text_out_2 that is a part of result text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEXT_OUT_3</name>
          <description>result text material text_out_3 configure register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_OUT_3</name>
              <description>This bits stores text_out_3 that is a part of result text material.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODE</name>
          <description>AES Mode register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODE</name>
              <description>This bits decides which one operation mode will be used. 3'd0: AES-EN-128, 3'd1: AES-EN-192, 3'd2: AES-EN-256, 3'd4: AES-DE-128, 3'd5: AES-DE-192, 3'd6: AES-DE-256.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENDIAN</name>
          <description>AES Endian configure register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENDIAN</name>
              <description>endian. [1:0] key endian, [3:2] text_in endian or in_stream endian,  [5:4] text_out endian or out_stream endian</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRIGGER</name>
          <description>AES trigger register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TRIGGER</name>
              <description>Set this bit to start AES calculation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>AES state register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Those bits shows AES status. For typical AES, 0: idle, 1: busy. For DMA-AES, 0: idle, 1: busy, 2: calculation_done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>IV_MEM[%s]</name>
          <description>The memory that stores initialization vector</description>
          <addressOffset>0x50</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>H_MEM[%s]</name>
          <description>The memory that stores GCM hash subkey</description>
          <addressOffset>0x60</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>J0_MEM[%s]</name>
          <description>The memory that stores J0</description>
          <addressOffset>0x70</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>T0_MEM[%s]</name>
          <description>The memory that stores T0</description>
          <addressOffset>0x80</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>DMA_ENABLE</name>
          <description>DMA-AES working mode register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_ENABLE</name>
              <description>1'b0: typical AES working mode, 1'b1: DMA-AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLOCK_MODE</name>
          <description>AES cipher block mode register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BLOCK_MODE</name>
              <description>Those bits decides which block mode will be used. 0x0: ECB, 0x1: CBC, 0x2: OFB, 0x3: CTR, 0x4: CFB-8, 0x5: CFB-128, 0x6: GCM, 0x7: reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLOCK_NUM</name>
          <description>AES block number register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BLOCK_NUM</name>
              <description>Those bits stores the number of Plaintext/ciphertext block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INC_SEL</name>
          <description>Standard incrementing function configure register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INC_SEL</name>
              <description>This bit decides the standard incrementing function. 0: INC32. 1: INC128.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AAD_BLOCK_NUM</name>
          <description>Additional Authential Data block number register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AAD_BLOCK_NUM</name>
              <description>Those bits stores the number of AAD block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAINDER_BIT_NUM</name>
          <description>AES remainder bit number register</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REMAINDER_BIT_NUM</name>
              <description>Those bits stores the number of remainder bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONTINUE</name>
          <description>AES continue register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CONTINUE</name>
              <description>Set this bit to continue GCM operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLEAR</name>
          <description>AES Interrupt clear register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INT_CLEAR</name>
              <description>Set this bit to clear the AES interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>AES Interrupt enable register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INT_ENA</name>
              <description>Set this bit to enable interrupt that occurs when DMA-AES calculation is done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>AES version control register</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x20191210</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This bits stores the version information of AES.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_EXIT</name>
          <description>AES-DMA exit config</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_EXIT</name>
              <description>Set this register to leave calculation done stage. Recommend to use it after software finishes reading DMA's output buffer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APB_CTRL</name>
      <description>Advanced Peripheral Bus Controller</description>
      <groupName>APB_CTRL</groupName>
      <baseAddress>0x60026000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA0</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SYSCLK_CONF</name>
          <description>APB_CTRL_SYSCLK_CONF_REG</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>PRE_DIV_CNT</name>
              <description>reg_pre_div_cnt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_320M_EN</name>
              <description>reg_clk_320m_en</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>reg_clk_en</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_TICK_CNT</name>
              <description>reg_rst_tick_cnt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TICK_CONF</name>
          <description>APB_CTRL_TICK_CONF_REG</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010727</resetValue>
          <fields>
            <field>
              <name>XTAL_TICK_NUM</name>
              <description>reg_xtal_tick_num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_TICK_NUM</name>
              <description>reg_ck8m_tick_num</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TICK_ENABLE</name>
              <description>reg_tick_enable</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_OUT_EN</name>
          <description>APB_CTRL_CLK_OUT_EN_REG</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x000007FF</resetValue>
          <fields>
            <field>
              <name>CLK20_OEN</name>
              <description>reg_clk20_oen</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK22_OEN</name>
              <description>reg_clk22_oen</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK44_OEN</name>
              <description>reg_clk44_oen</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_BB_OEN</name>
              <description>reg_clk_bb_oen</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK80_OEN</name>
              <description>reg_clk80_oen</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK160_OEN</name>
              <description>reg_clk160_oen</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_320M_OEN</name>
              <description>reg_clk_320m_oen</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_ADC_INF_OEN</name>
              <description>reg_clk_adc_inf_oen</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DAC_CPU_OEN</name>
              <description>reg_clk_dac_cpu_oen</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK40X_BB_OEN</name>
              <description>reg_clk40x_bb_oen</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_XTAL_OEN</name>
              <description>reg_clk_xtal_oen</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_BB_CFG</name>
          <description>APB_CTRL_WIFI_BB_CFG_REG</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WIFI_BB_CFG</name>
              <description>reg_wifi_bb_cfg</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_BB_CFG_2</name>
          <description>APB_CTRL_WIFI_BB_CFG_2_REG</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WIFI_BB_CFG_2</name>
              <description>reg_wifi_bb_cfg_2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_CLK_EN</name>
          <description>APB_CTRL_WIFI_CLK_EN_REG</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFCE030</resetValue>
          <fields>
            <field>
              <name>WIFI_CLK_EN</name>
              <description>reg_wifi_clk_en</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_RST_EN</name>
          <description>APB_CTRL_WIFI_RST_EN_REG</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WIFI_RST</name>
              <description>reg_wifi_rst</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HOST_INF_SEL</name>
          <description>APB_CTRL_HOST_INF_SEL_REG</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PERI_IO_SWAP</name>
              <description>reg_peri_io_swap</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_MEM_PMS_LOCK</name>
          <description>APB_CTRL_EXT_MEM_PMS_LOCK_REG</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_MEM_PMS_LOCK</name>
              <description>reg_ext_mem_pms_lock</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE0_ATTR</name>
          <description>APB_CTRL_FLASH_ACE0_ATTR_REG</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE0_ATTR</name>
              <description>reg_flash_ace0_attr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE1_ATTR</name>
          <description>APB_CTRL_FLASH_ACE1_ATTR_REG</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE1_ATTR</name>
              <description>reg_flash_ace1_attr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE2_ATTR</name>
          <description>APB_CTRL_FLASH_ACE2_ATTR_REG</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE2_ATTR</name>
              <description>reg_flash_ace2_attr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE3_ATTR</name>
          <description>APB_CTRL_FLASH_ACE3_ATTR_REG</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE3_ATTR</name>
              <description>reg_flash_ace3_attr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE0_ADDR</name>
          <description>APB_CTRL_FLASH_ACE0_ADDR_REG</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>S</name>
              <description>reg_flash_ace0_addr_s</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE1_ADDR</name>
          <description>APB_CTRL_FLASH_ACE1_ADDR_REG</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>reg_flash_ace1_addr_s</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE2_ADDR</name>
          <description>APB_CTRL_FLASH_ACE2_ADDR_REG</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>reg_flash_ace2_addr_s</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE3_ADDR</name>
          <description>APB_CTRL_FLASH_ACE3_ADDR_REG</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00C00000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>reg_flash_ace3_addr_s</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE0_SIZE</name>
          <description>APB_CTRL_FLASH_ACE0_SIZE_REG</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000400</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE0_SIZE</name>
              <description>reg_flash_ace0_size</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE1_SIZE</name>
          <description>APB_CTRL_FLASH_ACE1_SIZE_REG</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000400</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE1_SIZE</name>
              <description>reg_flash_ace1_size</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE2_SIZE</name>
          <description>APB_CTRL_FLASH_ACE2_SIZE_REG</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000400</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE2_SIZE</name>
              <description>reg_flash_ace2_size</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE3_SIZE</name>
          <description>APB_CTRL_FLASH_ACE3_SIZE_REG</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000400</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE3_SIZE</name>
              <description>reg_flash_ace3_size</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_PMS_CTRL</name>
          <description>APB_CTRL_SPI_MEM_PMS_CTRL_REG</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_INT</name>
              <description>reg_spi_mem_reject_int</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_MEM_REJECT_CLR</name>
              <description>reg_spi_mem_reject_clr</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SPI_MEM_REJECT_CDE</name>
              <description>reg_spi_mem_reject_cde</description>
              <bitOffset>2</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_REJECT_ADDR</name>
          <description>APB_CTRL_SPI_MEM_REJECT_ADDR_REG</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_ADDR</name>
              <description>reg_spi_mem_reject_addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_CTRL</name>
          <description>APB_CTRL_SDIO_CTRL_REG</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_WIN_ACCESS_EN</name>
              <description>reg_sdio_win_access_en</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REDCY_SIG0</name>
          <description>APB_CTRL_REDCY_SIG0_REG_REG</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REDCY_SIG0</name>
              <description>reg_redcy_sig0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REDCY_ANDOR</name>
              <description>reg_redcy_andor</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REDCY_SIG1</name>
          <description>APB_CTRL_REDCY_SIG1_REG_REG</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REDCY_SIG1</name>
              <description>reg_redcy_sig1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REDCY_NANDOR</name>
              <description>reg_redcy_nandor</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRONT_END_MEM_PD</name>
          <description>APB_CTRL_FRONT_END_MEM_PD_REG</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000015</resetValue>
          <fields>
            <field>
              <name>AGC_MEM_FORCE_PU</name>
              <description>reg_agc_mem_force_pu</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_MEM_FORCE_PD</name>
              <description>reg_agc_mem_force_pd</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PBUS_MEM_FORCE_PU</name>
              <description>reg_pbus_mem_force_pu</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PBUS_MEM_FORCE_PD</name>
              <description>reg_pbus_mem_force_pd</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DC_MEM_FORCE_PU</name>
              <description>reg_dc_mem_force_pu</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DC_MEM_FORCE_PD</name>
              <description>reg_dc_mem_force_pd</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL</name>
          <description>APB_CTRL_RETENTION_CTRL_REG</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RETENTION_LINK_ADDR</name>
              <description>reg_retention_link_addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOBYPASS_CPU_ISO_RST</name>
              <description>reg_nobypass_cpu_iso_rst</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKGATE_FORCE_ON</name>
          <description>APB_CTRL_CLKGATE_FORCE_ON_REG</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>ROM_CLKGATE_FORCE_ON</name>
              <description>reg_rom_clkgate_force_on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_CLKGATE_FORCE_ON</name>
              <description>reg_sram_clkgate_force_on</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_POWER_DOWN</name>
          <description>APB_CTRL_MEM_POWER_DOWN_REG</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ROM_POWER_DOWN</name>
              <description>reg_rom_power_down</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_POWER_DOWN</name>
              <description>reg_sram_power_down</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_POWER_UP</name>
          <description>APB_CTRL_MEM_POWER_UP_REG</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>ROM_POWER_UP</name>
              <description>reg_rom_power_up</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_POWER_UP</name>
              <description>reg_sram_power_up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RND_DATA</name>
          <description>APB_CTRL_RND_DATA_REG</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RND_DATA</name>
              <description>reg_rnd_data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_CONFIG</name>
          <description>APB_CTRL_PERI_BACKUP_CONFIG_REG_REG</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00006480</resetValue>
          <fields>
            <field>
              <name>PERI_BACKUP_FLOW_ERR</name>
              <description>reg_peri_backup_flow_err</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERI_BACKUP_BURST_LIMIT</name>
              <description>reg_peri_backup_burst_limit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERI_BACKUP_TOUT_THRES</name>
              <description>reg_peri_backup_tout_thres</description>
              <bitOffset>9</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERI_BACKUP_SIZE</name>
              <description>reg_peri_backup_size</description>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERI_BACKUP_START</name>
              <description>reg_peri_backup_start</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PERI_BACKUP_TO_MEM</name>
              <description>reg_peri_backup_to_mem</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERI_BACKUP_ENA</name>
              <description>reg_peri_backup_ena</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_APB_ADDR</name>
          <description>APB_CTRL_PERI_BACKUP_APB_ADDR_REG_REG</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_APB_START_ADDR</name>
              <description>reg_backup_apb_start_addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_MEM_ADDR</name>
          <description>APB_CTRL_PERI_BACKUP_MEM_ADDR_REG_REG</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_MEM_START_ADDR</name>
              <description>reg_backup_mem_start_addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_INT_RAW</name>
          <description>APB_CTRL_PERI_BACKUP_INT_RAW_REG</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PERI_BACKUP_DONE_INT_RAW</name>
              <description>reg_peri_backup_done_int_raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERI_BACKUP_ERR_INT_RAW</name>
              <description>reg_peri_backup_err_int_raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_INT_ST</name>
          <description>APB_CTRL_PERI_BACKUP_INT_ST_REG</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PERI_BACKUP_DONE_INT_ST</name>
              <description>reg_peri_backup_done_int_st</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERI_BACKUP_ERR_INT_ST</name>
              <description>reg_peri_backup_err_int_st</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_INT_ENA</name>
          <description>APB_CTRL_PERI_BACKUP_INT_ENA_REG</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PERI_BACKUP_DONE_INT_ENA</name>
              <description>reg_peri_backup_done_int_ena</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERI_BACKUP_ERR_INT_ENA</name>
              <description>reg_peri_backup_err_int_ena</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_INT_CLR</name>
          <description>APB_CTRL_PERI_BACKUP_INT_CLR_REG</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PERI_BACKUP_DONE_INT_CLR</name>
              <description>reg_peri_backup_done_int_clr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PERI_BACKUP_ERR_INT_CLR</name>
              <description>reg_peri_backup_err_int_clr</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>APB_CTRL_DATE_REG</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02007210</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>reg_dateVersion control</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APB_SARADC</name>
      <description>Successive Approximation Register Analog to Digital Converter</description>
      <groupName>APB_SARADC</groupName>
      <baseAddress>0x60040000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x68</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>APB_ADC</name>
        <value>43</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x40038240</resetValue>
          <fields>
            <field>
              <name>SARADC_START_FORCE</name>
              <description>select software enable saradc sample</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_START</name>
              <description>software enable saradc sample</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_CLK_GATED</name>
              <description>SAR clock gated</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_CLK_DIV</name>
              <description>SAR clock divider</description>
              <bitOffset>7</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_PATT_LEN</name>
              <description>0 ~ 15 means length 1 ~ 16</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_PATT_P_CLEAR</name>
              <description>clear the pointer of pattern table for DIG ADC1 CTRL</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_XPD_SAR_FORCE</name>
              <description>force option to xpd sar blocks</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_WAIT_ARB_CYCLE</name>
              <description>wait arbit signal stable after sar_done</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL2</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000A1FE</resetValue>
          <fields>
            <field>
              <name>SARADC_MEAS_NUM_LIMIT</name>
              <description>enable max meas num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_MAX_MEAS_NUM</name>
              <description>max conversion number</description>
              <bitOffset>1</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR1_INV</name>
              <description>1: data to DIG ADC1 CTRL is inverted, otherwise not</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR2_INV</name>
              <description>1: data to DIG ADC2 CTRL is inverted, otherwise not</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_TIMER_TARGET</name>
              <description>to set saradc timer target</description>
              <bitOffset>12</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_TIMER_EN</name>
              <description>to enable saradc timer trigger</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CTRL1</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC_FILTER_FACTOR1</name>
              <description>Factor of saradc filter1</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_FILTER_FACTOR0</name>
              <description>Factor of saradc filter0</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM_WAIT</name>
          <description>digital saradc configure register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00FF0808</resetValue>
          <fields>
            <field>
              <name>SARADC_XPD_WAIT</name>
              <description>saradc_xpd_wait</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_RSTB_WAIT</name>
              <description>saradc_rstb_wait</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_STANDBY_WAIT</name>
              <description>saradc_standby_wait</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_STATUS</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR1_STATUS</name>
              <description>saradc1 status about data and channel</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_STATUS</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR2_STATUS</name>
              <description>saradc2 status about data and channel</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_PATT_TAB1</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR_PATT_TAB1</name>
              <description>item 0 ~ 3 for pattern table 1 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_PATT_TAB2</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR_PATT_TAB2</name>
              <description>Item 4 ~ 7 for pattern table 1 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ONETIME_SAMPLE</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x1A000000</resetValue>
          <fields>
            <field>
              <name>SARADC_ONETIME_ATTEN</name>
              <description>configure onetime atten</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_ONETIME_CHANNEL</name>
              <description>configure onetime channel</description>
              <bitOffset>25</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_ONETIME_START</name>
              <description>trigger adc onetime sample</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC2_ONETIME_SAMPLE</name>
              <description>enable adc2 onetime sample</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC1_ONETIME_SAMPLE</name>
              <description>enable adc1 onetime sample</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ARB_CTRL</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000900</resetValue>
          <fields>
            <field>
              <name>ADC_ARB_APB_FORCE</name>
              <description>adc2 arbiter force to enableapb controller</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_RTC_FORCE</name>
              <description>adc2 arbiter force to enable rtc controller</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_WIFI_FORCE</name>
              <description>adc2 arbiter force to enable wifi controller</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_GRANT_FORCE</name>
              <description>adc2 arbiter force grant</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_APB_PRIORITY</name>
              <description>Set adc2 arbiterapb priority</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_RTC_PRIORITY</name>
              <description>Set adc2 arbiter rtc priority</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_WIFI_PRIORITY</name>
              <description>Set adc2 arbiter wifi priority</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_FIX_PRIORITY</name>
              <description>adc2 arbiter uses fixed priority</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CTRL0</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x03740000</resetValue>
          <fields>
            <field>
              <name>APB_SARADC_FILTER_CHANNEL1</name>
              <description>configure filter1 to adc channel</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_FILTER_CHANNEL0</name>
              <description>configure filter0 to adc channel</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_FILTER_RESET</name>
              <description>enable apb_adc1_filter</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1DATA_STATUS</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC1_DATA</name>
              <description>saradc1 data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2DATA_STATUS</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC2_DATA</name>
              <description>saradc2 data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES0_CTRL</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x0003FFED</resetValue>
          <fields>
            <field>
              <name>APB_SARADC_THRES0_CHANNEL</name>
              <description>configure thres0 to adc channel</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_HIGH</name>
              <description>saradc thres0 monitor thres</description>
              <bitOffset>5</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_LOW</name>
              <description>saradc thres0 monitor thres</description>
              <bitOffset>18</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES1_CTRL</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x0003FFED</resetValue>
          <fields>
            <field>
              <name>APB_SARADC_THRES1_CHANNEL</name>
              <description>configure thres1 to adc channel</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_HIGH</name>
              <description>saradc thres1 monitor thres</description>
              <bitOffset>5</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_LOW</name>
              <description>saradc thres1 monitor thres</description>
              <bitOffset>18</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES_CTRL</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC_THRES_ALL_EN</name>
              <description>enable thres to all channel</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_EN</name>
              <description>enable thres1</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_EN</name>
              <description>enable thres0</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>digital saradc int register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC_THRES1_LOW_INT_ENA</name>
              <description>saradc thres1 low  interrupt enable</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_LOW_INT_ENA</name>
              <description>saradc thres0 low interrupt enable</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_HIGH_INT_ENA</name>
              <description>saradc thres1 high interrupt enable</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_HIGH_INT_ENA</name>
              <description>saradc thres0 high interrupt enable</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_ENA</name>
              <description>saradc2 done interrupt enable</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_ENA</name>
              <description>saradc1 done interrupt enable</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>digital saradc int register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC_THRES1_LOW_INT_RAW</name>
              <description>saradc thres1 low  interrupt raw</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_LOW_INT_RAW</name>
              <description>saradc thres0 low interrupt raw</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_HIGH_INT_RAW</name>
              <description>saradc thres1 high interrupt raw</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_HIGH_INT_RAW</name>
              <description>saradc thres0 high interrupt raw</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_RAW</name>
              <description>saradc2 done interrupt raw</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_RAW</name>
              <description>saradc1 done interrupt raw</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>digital saradc int register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC_THRES1_LOW_INT_ST</name>
              <description>saradc thres1 low  interrupt state</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_LOW_INT_ST</name>
              <description>saradc thres0 low interrupt state</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_HIGH_INT_ST</name>
              <description>saradc thres1 high interrupt state</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_HIGH_INT_ST</name>
              <description>saradc thres0 high interrupt state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_ST</name>
              <description>saradc2 done interrupt state</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_ST</name>
              <description>saradc1 done interrupt state</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>digital saradc int register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC_THRES1_LOW_INT_CLR</name>
              <description>saradc thres1 low  interrupt clear</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_LOW_INT_CLR</name>
              <description>saradc thres0 low interrupt clear</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES1_HIGH_INT_CLR</name>
              <description>saradc thres1 high interrupt clear</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC_THRES0_HIGH_INT_CLR</name>
              <description>saradc thres0 high interrupt clear</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_CLR</name>
              <description>saradc2 done interrupt clear</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_CLR</name>
              <description>saradc1 done interrupt clear</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CONF</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>APB_ADC_EOF_NUM</name>
              <description>the dma_in_suc_eof gen when sample cnt = spi_eof_num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_ADC_RESET_FSM</name>
              <description>reset_apb_adc_state</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_ADC_TRANS</name>
              <description>enable apb_adc use spi_dma</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKM_CONF</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>CLKM_DIV_NUM</name>
              <description>Integral I2S clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_B</name>
              <description>Fractional clock divider numerator value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_A</name>
              <description>Fractional clock divider denominator value</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>reg clk en</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>Set this bit to enable clk_apll</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_TSENS_CTRL</name>
          <description>digital tsens configure register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x00018000</resetValue>
          <fields>
            <field>
              <name>TSENS_OUT</name>
              <description>temperature sensor data out</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSENS_IN_INV</name>
              <description>invert temperature sensor data</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_CLK_DIV</name>
              <description>temperature sensor clock divider</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_PU</name>
              <description>temperature sensor power up</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSENS_CTRL2</name>
          <description>digital tsens configure register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00004002</resetValue>
          <fields>
            <field>
              <name>TSENS_XPD_WAIT</name>
              <description>the time that power up tsens need wait</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_XPD_FORCE</name>
              <description>force power up tsens</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_CLK_INV</name>
              <description>inv tsens clk</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_CLK_SEL</name>
              <description>tsens clk select</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CALI</name>
          <description>digital saradc configure register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>APB_SARADC_CALI_CFG</name>
              <description>saradc cali factor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL_DATE</name>
          <description>version</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02007171</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ASSIST_DEBUG</name>
      <description>Debug Assist</description>
      <groupName>ASSIST_DEBUG</groupName>
      <baseAddress>0x600CE000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ASSIST_DEBUG</name>
        <value>54</value>
      </interrupt>
      <registers>
        <register>
          <name>C0RE_0_MONTR_ENA</name>
          <description>ASSIST_DEBUG_C0RE_0_MONTR_ENA_REG</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_ENA</name>
              <description>reg_core_0_area_dram0_0_rd_ena</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_ENA</name>
              <description>reg_core_0_area_dram0_0_wr_ena</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_ENA</name>
              <description>reg_core_0_area_dram0_1_rd_ena</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_ENA</name>
              <description>reg_core_0_area_dram0_1_wr_ena</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_ENA</name>
              <description>reg_core_0_area_pif_0_rd_ena</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_ENA</name>
              <description>reg_core_0_area_pif_0_wr_ena</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_ENA</name>
              <description>reg_core_0_area_pif_1_rd_ena</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_ENA</name>
              <description>reg_core_0_area_pif_1_wr_ena</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_ENA</name>
              <description>reg_core_0_sp_spill_min_ena</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_ENA</name>
              <description>reg_core_0_sp_spill_max_ena</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_ENA</name>
              <description>reg_core_0_iram0_exception_monitor_ena</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_ENA</name>
              <description>reg_core_0_dram0_exception_monitor_ena</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_INTR_RAW</name>
          <description>ASSIST_DEBUG_CORE_0_INTR_RAW_REG</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_RAW</name>
              <description>reg_core_0_area_dram0_0_rd_raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_RAW</name>
              <description>reg_core_0_area_dram0_0_wr_raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_RAW</name>
              <description>reg_core_0_area_dram0_1_rd_raw</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_RAW</name>
              <description>reg_core_0_area_dram0_1_wr_raw</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_RAW</name>
              <description>reg_core_0_area_pif_0_rd_raw</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_RAW</name>
              <description>reg_core_0_area_pif_0_wr_raw</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_RAW</name>
              <description>reg_core_0_area_pif_1_rd_raw</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_RAW</name>
              <description>reg_core_0_area_pif_1_wr_raw</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_RAW</name>
              <description>reg_core_0_sp_spill_min_raw</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_RAW</name>
              <description>reg_core_0_sp_spill_max_raw</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_RAW</name>
              <description>reg_core_0_iram0_exception_monitor_raw</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_RAW</name>
              <description>reg_core_0_dram0_exception_monitor_raw</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_INTR_ENA</name>
          <description>ASSIST_DEBUG_CORE_0_INTR_ENA_REG</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_INTR_ENA</name>
              <description>reg_core_0_area_dram0_0_rd_intr_ena</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_INTR_ENA</name>
              <description>reg_core_0_area_dram0_0_wr_intr_ena</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_INTR_ENA</name>
              <description>reg_core_0_area_dram0_1_rd_intr_ena</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_INTR_ENA</name>
              <description>reg_core_0_area_dram0_1_wr_intr_ena</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_INTR_ENA</name>
              <description>reg_core_0_area_pif_0_rd_intr_ena</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_INTR_ENA</name>
              <description>reg_core_0_area_pif_0_wr_intr_ena</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_INTR_ENA</name>
              <description>reg_core_0_area_pif_1_rd_intr_ena</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_INTR_ENA</name>
              <description>reg_core_0_area_pif_1_wr_intr_ena</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_INTR_ENA</name>
              <description>reg_core_0_sp_spill_min_intr_ena</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_INTR_ENA</name>
              <description>reg_core_0_sp_spill_max_intr_ena</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_RLS</name>
              <description>reg_core_0_iram0_exception_monitor_ena</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_RLS</name>
              <description>reg_core_0_dram0_exception_monitor_ena</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_INTR_CLR</name>
          <description>ASSIST_DEBUG_CORE_0_INTR_CLR_REG</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_CLR</name>
              <description>reg_core_0_area_dram0_0_rd_clr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_CLR</name>
              <description>reg_core_0_area_dram0_0_wr_clr</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_CLR</name>
              <description>reg_core_0_area_dram0_1_rd_clr</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_CLR</name>
              <description>reg_core_0_area_dram0_1_wr_clr</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_CLR</name>
              <description>reg_core_0_area_pif_0_rd_clr</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_CLR</name>
              <description>reg_core_0_area_pif_0_wr_clr</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_CLR</name>
              <description>reg_core_0_area_pif_1_rd_clr</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_CLR</name>
              <description>reg_core_0_area_pif_1_wr_clr</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_CLR</name>
              <description>reg_core_0_sp_spill_min_clr</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_CLR</name>
              <description>reg_core_0_sp_spill_max_clr</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_CLR</name>
              <description>reg_core_0_iram0_exception_monitor_clr</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_CLR</name>
              <description>reg_core_0_dram0_exception_monitor_clr</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_0_MIN</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_REG</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_MIN</name>
              <description>reg_core_0_area_dram0_0_min</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_0_MAX</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_REG</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_MAX</name>
              <description>reg_core_0_area_dram0_0_max</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_1_MIN</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_REG</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_1_MIN</name>
              <description>reg_core_0_area_dram0_1_min</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_1_MAX</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_REG</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_1_MAX</name>
              <description>reg_core_0_area_dram0_1_max</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_0_MIN</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_REG</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_0_MIN</name>
              <description>reg_core_0_area_pif_0_min</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_0_MAX</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_REG</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_0_MAX</name>
              <description>reg_core_0_area_pif_0_max</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_1_MIN</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_REG</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_1_MIN</name>
              <description>reg_core_0_area_pif_1_min</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_1_MAX</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_REG</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_1_MAX</name>
              <description>reg_core_0_area_pif_1_max</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PC</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_PC_REG</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_PC</name>
              <description>reg_core_0_area_pc</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_SP</name>
          <description>ASSIST_DEBUG_CORE_0_AREA_SP_REG</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_SP</name>
              <description>reg_core_0_area_sp</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_MIN</name>
          <description>ASSIST_DEBUG_CORE_0_SP_MIN_REG</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_SP_MIN</name>
              <description>reg_core_0_sp_min</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_MAX</name>
          <description>ASSIST_DEBUG_CORE_0_SP_MAX_REG</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_SP_MAX</name>
              <description>reg_core_0_sp_max</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_PC</name>
          <description>ASSIST_DEBUG_CORE_0_SP_PC_REG</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_SP_PC</name>
              <description>reg_core_0_sp_pc</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_EN</name>
          <description>ASSIST_DEBUG_CORE_0_RCD_EN_REG</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_RECORDEN</name>
              <description>reg_core_0_rcd_recorden</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_RCD_PDEBUGEN</name>
              <description>reg_core_0_rcd_pdebugen</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGPC</name>
          <description>ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_REG</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGPC</name>
              <description>reg_core_0_rcd_pdebugpc</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGSP</name>
          <description>ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGSP</name>
              <description>reg_core_0_rcd_pdebugsp</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_EXCEPTION_MONITOR_0</name>
          <description>ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_RECORDING_ADDR_0</name>
              <description>reg_core_0_iram0_recording_addr_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_WR_0</name>
              <description>reg_core_0_iram0_recording_wr_0</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_LOADSTORE_0</name>
              <description>reg_core_0_iram0_recording_loadstore_0</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_EXCEPTION_MONITOR_1</name>
          <description>ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_REG</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_RECORDING_ADDR_1</name>
              <description>reg_core_0_iram0_recording_addr_1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_WR_1</name>
              <description>reg_core_0_iram0_recording_wr_1</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_LOADSTORE_1</name>
              <description>reg_core_0_iram0_recording_loadstore_1</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_0</name>
          <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_REG</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_ADDR_0</name>
              <description>reg_core_0_dram0_recording_addr_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_RECORDING_WR_0</name>
              <description>reg_core_0_dram0_recording_wr_0</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_RECORDING_BYTEEN_0</name>
              <description>reg_core_0_dram0_recording_byteen_0</description>
              <bitOffset>25</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_1</name>
          <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_PC_0</name>
              <description>reg_core_0_dram0_recording_pc_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_2</name>
          <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_ADDR_1</name>
              <description>reg_core_0_dram0_recording_addr_1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_RECORDING_WR_1</name>
              <description>reg_core_0_dram0_recording_wr_1</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_RECORDING_BYTEEN_1</name>
              <description>reg_core_0_dram0_recording_byteen_1</description>
              <bitOffset>25</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_3</name>
          <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_REG</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_PC_1</name>
              <description>reg_core_0_dram0_recording_pc_1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0</name>
          <description>ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_REG</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0</name>
              <description>reg_core_x_iram0_dram0_limit_cycle_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1</name>
          <description>ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_REG</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1</name>
              <description>reg_core_x_iram0_dram0_limit_cycle_1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_SETTING</name>
          <description>ASSIST_DEBUG_LOG_SETTING</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>LOG_ENA</name>
              <description>reg_log_ena</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOG_MODE</name>
              <description>reg_log_mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOG_MEM_LOOP_ENABLE</name>
              <description>reg_log_mem_loop_enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_0</name>
          <description>ASSIST_DEBUG_LOG_DATA_0_REG</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_0</name>
              <description>reg_log_data_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_MASK</name>
          <description>ASSIST_DEBUG_LOG_DATA_MASK_REG</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_SIZE</name>
              <description>reg_log_data_size</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MIN</name>
          <description>ASSIST_DEBUG_LOG_MIN_REG</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MIN</name>
              <description>reg_log_min</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MAX</name>
          <description>ASSIST_DEBUG_LOG_MAX_REG</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MAX</name>
              <description>reg_log_max</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_START</name>
          <description>ASSIST_DEBUG_LOG_MEM_START_REG</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_START</name>
              <description>reg_log_mem_start</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_END</name>
          <description>ASSIST_DEBUG_LOG_MEM_END_REG</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_END</name>
              <description>reg_log_mem_end</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_WRITING_ADDR</name>
          <description>ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_REG</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_WRITING_ADDR</name>
              <description>reg_log_mem_writing_addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_FULL_FLAG</name>
          <description>ASSIST_DEBUG_LOG_MEM_FULL_FLAG_REG</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_FULL_FLAG</name>
              <description>reg_log_mem_full_flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLR_LOG_MEM_FULL_FLAG</name>
              <description>reg_clr_log_mem_full_flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C0RE_0_LASTPC_BEFORE_EXCEPTION</name>
          <description>ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_LASTPC_BEFORE_EXC</name>
              <description>reg_core_0_lastpc_before_exc</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C0RE_0_DEBUG_MODE</name>
          <description>ASSIST_DEBUG_C0RE_0_DEBUG_MODE</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DEBUG_MODE</name>
              <description>reg_core_0_debug_mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DEBUG_MODULE_ACTIVE</name>
              <description>reg_core_0_debug_module_active</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>ASSIST_DEBUG_DATE_REG</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02008010</resetValue>
          <fields>
            <field>
              <name>ASSIST_DEBUG_DATE</name>
              <description>reg_assist_debug_date</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA (Direct Memory Access) Controller</description>
      <groupName>DMA</groupName>
      <baseAddress>0x6003F000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x174</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA_CH0</name>
        <value>44</value>
      </interrupt>
      <interrupt>
        <name>DMA_CH1</name>
        <value>45</value>
      </interrupt>
      <interrupt>
        <name>DMA_CH2</name>
        <value>46</value>
      </interrupt>
      <registers>
        <register>
          <name>INT_RAW_CH0</name>
          <description>DMA_INT_RAW_CH0_REG.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 0. For other peripherals, this raw interrupt is reserved.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 0.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is underflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is overflow.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is underflow.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_CH0</name>
          <description>DMA_INT_ST_CH0_REG.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_CH0</name>
          <description>DMA_INT_ENA_CH0_REG.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_CH0</name>
          <description>DMA_INT_CLR_CH0_REG.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_CH1</name>
          <description>DMA_INT_RAW_CH1_REG.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 1. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 1. For other peripherals, this raw interrupt is reserved.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 1.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 1.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 1 is overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 1 is underflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 1 is overflow.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 1 is underflow.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_CH1</name>
          <description>DMA_INT_ST_CH1_REG.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_CH1</name>
          <description>DMA_INT_ENA_CH1_REG.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_CH1</name>
          <description>DMA_INT_CLR_CH1_REG.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_CH2</name>
          <description>DMA_INT_RAW_CH2_REG.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 2. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 2.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 2. For other peripherals, this raw interrupt is reserved.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 2.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 2.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 2.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 2.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 2 is overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 2 is underflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 2 is overflow.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 2 is underflow.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_CH2</name>
          <description>DMA_INT_ST_CH2_REG.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_CH2</name>
          <description>DMA_INT_ENA_CH2_REG.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_CH2</name>
          <description>DMA_INT_CLR_CH2_REG.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DONE</name>
              <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_OVF</name>
              <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_UDF</name>
              <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF</name>
              <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF</name>
              <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB_TEST</name>
          <description>DMA_AHB_TEST_REG.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AHB_TESTMODE</name>
              <description>reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_TESTADDR</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC_CONF</name>
          <description>DMA_MISC_CONF_REG.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AHBM_RST_INTER</name>
              <description>Set this bit, then clear this bit to reset the internal ahb FSM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARB_PRI_DIS</name>
              <description>Set this bit to disable priority arbitration function.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>reg_clk_en</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>DMA_DATE_REG.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x02008250</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>register version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_CONF0_CH0</name>
          <description>DMA_IN_CONF0_CH0_REG.</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_RST</name>
              <description>This bit is used to reset DMA channel 0 Rx FSM and Rx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 0 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 0 receiving data when accessing internal SRAM.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TRANS_EN</name>
              <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_CONF1_CH0</name>
          <description>DMA_IN_CONF1_CH0_REG.</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INFIFO_STATUS_CH0</name>
          <description>DMA_INFIFO_STATUS_CH0_REG.</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x07800003</resetValue>
          <fields>
            <field>
              <name>INFIFO_FULL</name>
              <description>L1 Rx FIFO full signal for Rx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_EMPTY</name>
              <description>L1 Rx FIFO empty signal for Rx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT</name>
              <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_1B</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_2B</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_3B</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_4B</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_BUF_HUNGRY</name>
              <description>reserved</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_POP_CH0</name>
          <description>DMA_IN_POP_CH0_REG.</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>INFIFO_RDATA</name>
              <description>This register stores the data popping from DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_POP</name>
              <description>Set this bit to pop data from DMA FIFO.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_LINK_CH0</name>
          <description>DMA_IN_LINK_CH0_REG.</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x01100000</resetValue>
          <fields>
            <field>
              <name>INLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_AUTO_RET</name>
              <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_STOP</name>
              <description>Set this bit to stop dealing with the inlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_START</name>
              <description>Set this bit to start dealing with the inlink descriptors.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_RESTART</name>
              <description>Set this bit to mount a new inlink descriptor.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_PARK</name>
              <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_STATE_CH0</name>
          <description>DMA_IN_STATE_CH0_REG.</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_ADDR</name>
              <description>This register stores the current inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_SUC_EOF_DES_ADDR_CH0</name>
          <description>DMA_IN_SUC_EOF_DES_ADDR_CH0_REG.</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_SUC_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_ERR_EOF_DES_ADDR_CH0</name>
          <description>DMA_IN_ERR_EOF_DES_ADDR_CH0_REG.</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_ERR_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_CH0</name>
          <description>DMA_IN_DSCR_CH0_REG.</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR</name>
              <description>The address of the current inlink descriptor x.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_BF0_CH0</name>
          <description>DMA_IN_DSCR_BF0_CH0_REG.</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF0</name>
              <description>The address of the last inlink descriptor x-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_BF1_CH0</name>
          <description>DMA_IN_DSCR_BF1_CH0_REG.</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_PRI_CH0</name>
          <description>DMA_IN_PRI_CH0_REG.</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_PRI</name>
              <description>The priority of Rx channel 0. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_PERI_SEL_CH0</name>
          <description>DMA_IN_PERI_SEL_CH0_REG.</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_IN_SEL</name>
              <description>This register is used to select peripheral for Rx channel 0. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CONF0_CH0</name>
          <description>DMA_OUT_CONF0_CH0_REG.</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>OUT_RST</name>
              <description>This bit is used to reset DMA channel 0 Tx FSM and Tx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_AUTO_WRBACK</name>
              <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF_MODE</name>
              <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 0 is generated when data need to transmit has been popped from FIFO in DMA</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 0 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 0 transmitting data when accessing internal SRAM.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CONF1_CH0</name>
          <description>DMA_OUT_CONF1_CH0_REG.</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTFIFO_STATUS_CH0</name>
          <description>DMA_OUTFIFO_STATUS_CH0_REG.</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <resetValue>0x07800002</resetValue>
          <fields>
            <field>
              <name>OUTFIFO_FULL</name>
              <description>L1 Tx FIFO full signal for Tx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_EMPTY</name>
              <description>L1 Tx FIFO empty signal for Tx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT</name>
              <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_1B</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_2B</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_3B</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_4B</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PUSH_CH0</name>
          <description>DMA_OUT_PUSH_CH0_REG.</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTFIFO_WDATA</name>
              <description>This register stores the data that need to be pushed into DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_PUSH</name>
              <description>Set this bit to push data into DMA FIFO.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_LINK_CH0</name>
          <description>DMA_OUT_LINK_CH0_REG.</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>OUTLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_STOP</name>
              <description>Set this bit to stop dealing with the outlink descriptors.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_START</name>
              <description>Set this bit to start dealing with the outlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_RESTART</name>
              <description>Set this bit to restart a new outlink from the last address.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_PARK</name>
              <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_STATE_CH0</name>
          <description>DMA_OUT_STATE_CH0_REG.</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_ADDR</name>
              <description>This register stores the current outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_DES_ADDR_CH0</name>
          <description>DMA_OUT_EOF_DES_ADDR_CH0_REG.</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_BFR_DES_ADDR_CH0</name>
          <description>DMA_OUT_EOF_BFR_DES_ADDR_CH0_REG.</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_BFR_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_CH0</name>
          <description>DMA_OUT_DSCR_CH0_REG.</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR</name>
              <description>The address of the current outlink descriptor y.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_BF0_CH0</name>
          <description>DMA_OUT_DSCR_BF0_CH0_REG.</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF0</name>
              <description>The address of the last outlink descriptor y-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_BF1_CH0</name>
          <description>DMA_OUT_DSCR_BF1_CH0_REG.</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PRI_CH0</name>
          <description>DMA_OUT_PRI_CH0_REG.</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_PRI</name>
              <description>The priority of Tx channel 0. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PERI_SEL_CH0</name>
          <description>DMA_OUT_PERI_SEL_CH0_REG.</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_OUT_SEL</name>
              <description>This register is used to select peripheral for Tx channel 0. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_CONF0_CH1</name>
          <description>DMA_IN_CONF0_CH1_REG.</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_RST</name>
              <description>This bit is used to reset DMA channel 1 Rx FSM and Rx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 1 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 1 receiving data when accessing internal SRAM.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TRANS_EN</name>
              <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_CONF1_CH1</name>
          <description>DMA_IN_CONF1_CH1_REG.</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INFIFO_STATUS_CH1</name>
          <description>DMA_INFIFO_STATUS_CH1_REG.</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <resetValue>0x07800003</resetValue>
          <fields>
            <field>
              <name>INFIFO_FULL</name>
              <description>L1 Rx FIFO full signal for Rx channel 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_EMPTY</name>
              <description>L1 Rx FIFO empty signal for Rx channel 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT</name>
              <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_1B</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_2B</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_3B</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_4B</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_BUF_HUNGRY</name>
              <description>reserved</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_POP_CH1</name>
          <description>DMA_IN_POP_CH1_REG.</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>INFIFO_RDATA</name>
              <description>This register stores the data popping from DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_POP</name>
              <description>Set this bit to pop data from DMA FIFO.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_LINK_CH1</name>
          <description>DMA_IN_LINK_CH1_REG.</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <resetValue>0x01100000</resetValue>
          <fields>
            <field>
              <name>INLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_AUTO_RET</name>
              <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_STOP</name>
              <description>Set this bit to stop dealing with the inlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_START</name>
              <description>Set this bit to start dealing with the inlink descriptors.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_RESTART</name>
              <description>Set this bit to mount a new inlink descriptor.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_PARK</name>
              <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_STATE_CH1</name>
          <description>DMA_IN_STATE_CH1_REG.</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_ADDR</name>
              <description>This register stores the current inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_SUC_EOF_DES_ADDR_CH1</name>
          <description>DMA_IN_SUC_EOF_DES_ADDR_CH1_REG.</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_SUC_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_ERR_EOF_DES_ADDR_CH1</name>
          <description>DMA_IN_ERR_EOF_DES_ADDR_CH1_REG.</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_ERR_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_CH1</name>
          <description>DMA_IN_DSCR_CH1_REG.</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR</name>
              <description>The address of the current inlink descriptor x.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_BF0_CH1</name>
          <description>DMA_IN_DSCR_BF0_CH1_REG.</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF0</name>
              <description>The address of the last inlink descriptor x-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_BF1_CH1</name>
          <description>DMA_IN_DSCR_BF1_CH1_REG.</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_PRI_CH1</name>
          <description>DMA_IN_PRI_CH1_REG.</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_PRI</name>
              <description>The priority of Rx channel 1. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_PERI_SEL_CH1</name>
          <description>DMA_IN_PERI_SEL_CH1_REG.</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_IN_SEL</name>
              <description>This register is used to select peripheral for Rx channel 1. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CONF0_CH1</name>
          <description>DMA_OUT_CONF0_CH1_REG.</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>OUT_RST</name>
              <description>This bit is used to reset DMA channel 1 Tx FSM and Tx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_AUTO_WRBACK</name>
              <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF_MODE</name>
              <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 1 is generated when data need to transmit has been popped from FIFO in DMA</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 1 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 1 transmitting data when accessing internal SRAM.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CONF1_CH1</name>
          <description>DMA_OUT_CONF1_CH1_REG.</description>
          <addressOffset>0x194</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTFIFO_STATUS_CH1</name>
          <description>DMA_OUTFIFO_STATUS_CH1_REG.</description>
          <addressOffset>0x198</addressOffset>
          <size>0x20</size>
          <resetValue>0x07800002</resetValue>
          <fields>
            <field>
              <name>OUTFIFO_FULL</name>
              <description>L1 Tx FIFO full signal for Tx channel 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_EMPTY</name>
              <description>L1 Tx FIFO empty signal for Tx channel 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT</name>
              <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_1B</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_2B</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_3B</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_4B</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PUSH_CH1</name>
          <description>DMA_OUT_PUSH_CH1_REG.</description>
          <addressOffset>0x19C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTFIFO_WDATA</name>
              <description>This register stores the data that need to be pushed into DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_PUSH</name>
              <description>Set this bit to push data into DMA FIFO.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_LINK_CH1</name>
          <description>DMA_OUT_LINK_CH1_REG.</description>
          <addressOffset>0x1A0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>OUTLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_STOP</name>
              <description>Set this bit to stop dealing with the outlink descriptors.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_START</name>
              <description>Set this bit to start dealing with the outlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_RESTART</name>
              <description>Set this bit to restart a new outlink from the last address.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_PARK</name>
              <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_STATE_CH1</name>
          <description>DMA_OUT_STATE_CH1_REG.</description>
          <addressOffset>0x1A4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_ADDR</name>
              <description>This register stores the current outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_DES_ADDR_CH1</name>
          <description>DMA_OUT_EOF_DES_ADDR_CH1_REG.</description>
          <addressOffset>0x1A8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_BFR_DES_ADDR_CH1</name>
          <description>DMA_OUT_EOF_BFR_DES_ADDR_CH1_REG.</description>
          <addressOffset>0x1AC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_BFR_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_CH1</name>
          <description>DMA_OUT_DSCR_CH1_REG.</description>
          <addressOffset>0x1B0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR</name>
              <description>The address of the current outlink descriptor y.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_BF0_CH1</name>
          <description>DMA_OUT_DSCR_BF0_CH1_REG.</description>
          <addressOffset>0x1B4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF0</name>
              <description>The address of the last outlink descriptor y-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_BF1_CH1</name>
          <description>DMA_OUT_DSCR_BF1_CH1_REG.</description>
          <addressOffset>0x1B8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PRI_CH1</name>
          <description>DMA_OUT_PRI_CH1_REG.</description>
          <addressOffset>0x1BC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_PRI</name>
              <description>The priority of Tx channel 1. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PERI_SEL_CH1</name>
          <description>DMA_OUT_PERI_SEL_CH1_REG.</description>
          <addressOffset>0x1C0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_OUT_SEL</name>
              <description>This register is used to select peripheral for Tx channel 1. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_CONF0_CH2</name>
          <description>DMA_IN_CONF0_CH2_REG.</description>
          <addressOffset>0x1F0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_RST</name>
              <description>This bit is used to reset DMA channel 2 Rx FSM and Rx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 2 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 2 receiving data when accessing internal SRAM.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TRANS_EN</name>
              <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_CONF1_CH2</name>
          <description>DMA_IN_CONF1_CH2_REG.</description>
          <addressOffset>0x1F4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INFIFO_STATUS_CH2</name>
          <description>DMA_INFIFO_STATUS_CH2_REG.</description>
          <addressOffset>0x1F8</addressOffset>
          <size>0x20</size>
          <resetValue>0x07800003</resetValue>
          <fields>
            <field>
              <name>INFIFO_FULL</name>
              <description>L1 Rx FIFO full signal for Rx channel 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_EMPTY</name>
              <description>L1 Rx FIFO empty signal for Rx channel 2.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT</name>
              <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_1B</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_2B</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_3B</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_4B</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_BUF_HUNGRY</name>
              <description>reserved</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_POP_CH2</name>
          <description>DMA_IN_POP_CH2_REG.</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>INFIFO_RDATA</name>
              <description>This register stores the data popping from DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_POP</name>
              <description>Set this bit to pop data from DMA FIFO.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_LINK_CH2</name>
          <description>DMA_IN_LINK_CH2_REG.</description>
          <addressOffset>0x200</addressOffset>
          <size>0x20</size>
          <resetValue>0x01100000</resetValue>
          <fields>
            <field>
              <name>INLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_AUTO_RET</name>
              <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_STOP</name>
              <description>Set this bit to stop dealing with the inlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_START</name>
              <description>Set this bit to start dealing with the inlink descriptors.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_RESTART</name>
              <description>Set this bit to mount a new inlink descriptor.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_PARK</name>
              <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_STATE_CH2</name>
          <description>DMA_IN_STATE_CH2_REG.</description>
          <addressOffset>0x204</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_ADDR</name>
              <description>This register stores the current inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_SUC_EOF_DES_ADDR_CH2</name>
          <description>DMA_IN_SUC_EOF_DES_ADDR_CH2_REG.</description>
          <addressOffset>0x208</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_SUC_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_ERR_EOF_DES_ADDR_CH2</name>
          <description>DMA_IN_ERR_EOF_DES_ADDR_CH2_REG.</description>
          <addressOffset>0x20C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_ERR_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_CH2</name>
          <description>DMA_IN_DSCR_CH2_REG.</description>
          <addressOffset>0x210</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR</name>
              <description>The address of the current inlink descriptor x.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_BF0_CH2</name>
          <description>DMA_IN_DSCR_BF0_CH2_REG.</description>
          <addressOffset>0x214</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF0</name>
              <description>The address of the last inlink descriptor x-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DSCR_BF1_CH2</name>
          <description>DMA_IN_DSCR_BF1_CH2_REG.</description>
          <addressOffset>0x218</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_PRI_CH2</name>
          <description>DMA_IN_PRI_CH2_REG.</description>
          <addressOffset>0x21C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_PRI</name>
              <description>The priority of Rx channel 2. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_PERI_SEL_CH2</name>
          <description>DMA_IN_PERI_SEL_CH2_REG.</description>
          <addressOffset>0x220</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_IN_SEL</name>
              <description>This register is used to select peripheral for Rx channel 2. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CONF0_CH2</name>
          <description>DMA_OUT_CONF0_CH2_REG.</description>
          <addressOffset>0x250</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>OUT_RST</name>
              <description>This bit is used to reset DMA channel 2 Tx FSM and Tx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_AUTO_WRBACK</name>
              <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF_MODE</name>
              <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 2 is generated when data need to transmit has been popped from FIFO in DMA</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 2 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 2 transmitting data when accessing internal SRAM.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CONF1_CH2</name>
          <description>DMA_OUT_CONF1_CH2_REG.</description>
          <addressOffset>0x254</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTFIFO_STATUS_CH2</name>
          <description>DMA_OUTFIFO_STATUS_CH2_REG.</description>
          <addressOffset>0x258</addressOffset>
          <size>0x20</size>
          <resetValue>0x07800002</resetValue>
          <fields>
            <field>
              <name>OUTFIFO_FULL</name>
              <description>L1 Tx FIFO full signal for Tx channel 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_EMPTY</name>
              <description>L1 Tx FIFO empty signal for Tx channel 2.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT</name>
              <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_1B</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_2B</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_3B</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_4B</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PUSH_CH2</name>
          <description>DMA_OUT_PUSH_CH2_REG.</description>
          <addressOffset>0x25C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTFIFO_WDATA</name>
              <description>This register stores the data that need to be pushed into DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_PUSH</name>
              <description>Set this bit to push data into DMA FIFO.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_LINK_CH2</name>
          <description>DMA_OUT_LINK_CH2_REG.</description>
          <addressOffset>0x260</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>OUTLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_STOP</name>
              <description>Set this bit to stop dealing with the outlink descriptors.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_START</name>
              <description>Set this bit to start dealing with the outlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_RESTART</name>
              <description>Set this bit to restart a new outlink from the last address.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_PARK</name>
              <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_STATE_CH2</name>
          <description>DMA_OUT_STATE_CH2_REG.</description>
          <addressOffset>0x264</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_ADDR</name>
              <description>This register stores the current outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_DES_ADDR_CH2</name>
          <description>DMA_OUT_EOF_DES_ADDR_CH2_REG.</description>
          <addressOffset>0x268</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_BFR_DES_ADDR_CH2</name>
          <description>DMA_OUT_EOF_BFR_DES_ADDR_CH2_REG.</description>
          <addressOffset>0x26C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_BFR_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_CH2</name>
          <description>DMA_OUT_DSCR_CH2_REG.</description>
          <addressOffset>0x270</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR</name>
              <description>The address of the current outlink descriptor y.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_BF0_CH2</name>
          <description>DMA_OUT_DSCR_BF0_CH2_REG.</description>
          <addressOffset>0x274</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF0</name>
              <description>The address of the last outlink descriptor y-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_DSCR_BF1_CH2</name>
          <description>DMA_OUT_DSCR_BF1_CH2_REG.</description>
          <addressOffset>0x278</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PRI_CH2</name>
          <description>DMA_OUT_PRI_CH2_REG.</description>
          <addressOffset>0x27C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_PRI</name>
              <description>The priority of Tx channel 2. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_PERI_SEL_CH2</name>
          <description>DMA_OUT_PERI_SEL_CH2_REG.</description>
          <addressOffset>0x280</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_OUT_SEL</name>
              <description>This register is used to select peripheral for Tx channel 2. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DS</name>
      <description>Digital Signature</description>
      <groupName>DS</groupName>
      <baseAddress>0x6003D000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x108C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Y_MEM[%s]</name>
          <description>memory that stores Y</description>
          <addressOffset>0x0</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>M_MEM[%s]</name>
          <description>memory that stores M</description>
          <addressOffset>0x200</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>RB_MEM[%s]</name>
          <description>memory that stores Rb</description>
          <addressOffset>0x400</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>48</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>BOX_MEM[%s]</name>
          <description>memory that stores BOX</description>
          <addressOffset>0x600</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>X_MEM[%s]</name>
          <description>memory that stores X</description>
          <addressOffset>0x800</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Z_MEM[%s]</name>
          <description>memory that stores Z</description>
          <addressOffset>0xA00</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>SET_START</name>
          <description>DS start control register</description>
          <addressOffset>0xE00</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START</name>
              <description>set this bit to start DS operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_CONTINUE</name>
          <description>DS continue control register</description>
          <addressOffset>0xE04</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_CONTINUE</name>
              <description>set this bit to continue DS operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_FINISH</name>
          <description>DS finish control register</description>
          <addressOffset>0xE08</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_FINISH</name>
              <description>Set this bit to finish DS process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_BUSY</name>
          <description>DS query busy register</description>
          <addressOffset>0xE0C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUERY_BUSY</name>
              <description>digital signature state. 1'b0: idle, 1'b1: busy</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_KEY_WRONG</name>
          <description>DS query key-wrong counter register</description>
          <addressOffset>0xE10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUERY_KEY_WRONG</name>
              <description>digital signature key wrong counter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_CHECK</name>
          <description>DS query check result register</description>
          <addressOffset>0xE14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MD_ERROR</name>
              <description>MD checkout result. 1'b0: MD check pass, 1'b1: MD check fail</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PADDING_BAD</name>
              <description>padding checkout result. 1'b0: a good padding, 1'b1: a bad padding</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>DS version control register</description>
          <addressOffset>0xE20</addressOffset>
          <size>0x20</size>
          <resetValue>0x20200618</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>ds version information</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EFUSE</name>
      <description>eFuse Controller</description>
      <groupName>EFUSE</groupName>
      <baseAddress>0x60008800</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1CC</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>EFUSE</name>
        <value>24</value>
      </interrupt>
      <registers>
        <register>
          <name>PGM_DATA0</name>
          <description>Register 0 that stores data to be programmed.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_0</name>
              <description>The content of the 0th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA1</name>
          <description>Register 1 that stores data to be programmed.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_1</name>
              <description>The content of the 1st 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA2</name>
          <description>Register 2 that stores data to be programmed.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_2</name>
              <description>The content of the 2nd 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA3</name>
          <description>Register 3 that stores data to be programmed.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_3</name>
              <description>The content of the 3rd 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA4</name>
          <description>Register 4 that stores data to be programmed.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_4</name>
              <description>The content of the 4th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA5</name>
          <description>Register 5 that stores data to be programmed.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_5</name>
              <description>The content of the 5th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA6</name>
          <description>Register 6 that stores data to be programmed.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_6</name>
              <description>The content of the 6th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA7</name>
          <description>Register 7 that stores data to be programmed.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_7</name>
              <description>The content of the 7th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_CHECK_VALUE0</name>
          <description>Register 0 that stores the RS code to be programmed.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_0</name>
              <description>The content of the 0th 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_CHECK_VALUE1</name>
          <description>Register 1 that stores the RS code to be programmed.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_1</name>
              <description>The content of the 1st 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_CHECK_VALUE2</name>
          <description>Register 2 that stores the RS code to be programmed.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_2</name>
              <description>The content of the 2nd 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_WR_DIS</name>
          <description>BLOCK0 data register 0.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WR_DIS</name>
              <description>Disable programming of individual eFuses.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA0</name>
          <description>BLOCK0 data register 1.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RD_DIS</name>
              <description>Set this bit to disable reading from BlOCK4-10.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_RTC_RAM_BOOT</name>
              <description>Set this bit to disable boot from RTC RAM.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_ICACHE</name>
              <description>Set this bit to disable Icache.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_JTAG</name>
              <description>Set this bit to disable function of usb switch to jtag in module of usb device.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_ICACHE</name>
              <description>Set this bit to disable Icache in download mode (boot_mode[3:0] is 0, 1, 2, 3, 6, 7).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DEVICE</name>
              <description>Set this bit to disable usb device.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_FORCE_DOWNLOAD</name>
              <description>Set this bit to disable the function that forces chip into download mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED6</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_CAN</name>
              <description>Set this bit to disable CAN function.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>JTAG_SEL_ENABLE</name>
              <description>Set this bit to enable selection between usb_to_jtag and pad_to_jtag through strapping gpio10 when both reg_dis_usb_jtag and reg_dis_pad_jtag are equal to 0.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_DIS_JTAG</name>
              <description>Set these bits to disable JTAG in the soft way (odd number 1 means disable ). JTAG can be enabled in HMAC module.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_PAD_JTAG</name>
              <description>Set this bit to disable JTAG in the hard way. JTAG is disabled permanently.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_MANUAL_ENCRYPT</name>
              <description>Set this bit to disable flash encryption when in download boot modes.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFH</name>
              <description>Controls single-end input threshold vrefh, 1.76 V to 2 V with step of 80 mV, stored in eFuse.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFL</name>
              <description>Controls single-end input threshold vrefl, 0.8 V to 1.04 V with step of 80 mV, stored in eFuse.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_EXCHG_PINS</name>
              <description>Set this bit to exchange USB D+ and D- pins.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_AS_GPIO</name>
              <description>Set this bit to vdd spi pin function as gpio.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BTLC_GPIO_ENABLE</name>
              <description>Enable btlc gpio.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWERGLITCH_EN</name>
              <description>Set this bit to enable power glitch function.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_GLITCH_DSENSE</name>
              <description>Sample delay configuration of power glitch.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA1</name>
          <description>BLOCK0 data register 2.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RPT4_RESERVED2</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_DELAY_SEL</name>
              <description>Selects RTC watchdog timeout threshold, in unit of slow clock cycle. 0: 40000. 1: 80000. 2: 160000. 3:320000.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_BOOT_CRYPT_CNT</name>
              <description>Set this bit to enable SPI boot encrypt/decrypt. Odd number of 1: enable. even number of 1: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE0</name>
              <description>Set this bit to enable revoking first secure boot key.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE1</name>
              <description>Set this bit to enable revoking second secure boot key.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE2</name>
              <description>Set this bit to enable revoking third secure boot key.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_0</name>
              <description>Purpose of Key0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_1</name>
              <description>Purpose of Key1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA2</name>
          <description>BLOCK0 data register 3.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_PURPOSE_2</name>
              <description>Purpose of Key2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_3</name>
              <description>Purpose of Key3.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_4</name>
              <description>Purpose of Key4.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_5</name>
              <description>Purpose of Key5.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED3</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN</name>
              <description>Set this bit to enable secure boot.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AGGRESSIVE_REVOKE</name>
              <description>Set this bit to enable revoking aggressive secure boot.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED0</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>22</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TPUW</name>
              <description>Configures flash waiting time after power-up, in unit of ms. If the value is less than 15, the waiting time is the configurable value; Otherwise, the waiting time is twice the configurable value.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA3</name>
          <description>BLOCK0 data register 4.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIS_DOWNLOAD_MODE</name>
              <description>Set this bit to disable download mode (boot_mode[3:0] = 0, 1, 2, 3, 6, 7).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_LEGACY_SPI_BOOT</name>
              <description>Set this bit to disable Legacy SPI boot mode (boot_mode[3:0] = 4).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CHANNEL</name>
              <description>Selectes the default UART print channel. 0: UART0. 1: UART1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_MODE</name>
              <description>Set ECC mode in ROM, 0: ROM would Enable Flash ECC 16to18 byte mode. 1:ROM would use 16to17 byte mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DOWNLOAD_MODE</name>
              <description>Set this bit to disable UART download mode through USB.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENABLE_SECURITY_DOWNLOAD</name>
              <description>Set this bit to enable secure UART download mode.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CONTROL</name>
              <description>Set the default UARTboot message output mode. 00: Enabled. 01: Enabled when GPIO8 is low at reset. 10: Enabled when GPIO8 is high at reset. 11:disabled.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PIN_POWER_SELECTION</name>
              <description>GPIO33-GPIO37 power supply selection in ROM code. 0: VDD3P3_CPU. 1: VDD_SPI.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TYPE</name>
              <description>Set the maximum lines of SPI flash. 0: four lines. 1: eight lines.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_PAGE_SIZE</name>
              <description>Set Flash page size.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_EN</name>
              <description>Set 1 to enable ECC for flash boot.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_SEND_RESUME</name>
              <description>Set this bit to force ROM code to send a resume command during SPI boot.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_VERSION</name>
              <description>Secure version (used by ESP-IDF anti-rollback feature).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED1</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA4</name>
          <description>BLOCK0 data register 5.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RPT4_RESERVED4</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_0</name>
          <description>BLOCK1 data register 0.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_0</name>
              <description>Stores the low 32 bits of MAC address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_1</name>
          <description>BLOCK1 data register 1.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_1</name>
              <description>Stores the high 16 bits of MAC address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_PAD_CONF_0</name>
              <description>Stores the zeroth part of SPI_PAD_CONF.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_2</name>
          <description>BLOCK1 data register 2.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_PAD_CONF_1</name>
              <description>Stores the first part of SPI_PAD_CONF.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_3</name>
          <description>BLOCK1 data register 3.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_PAD_CONF_2</name>
              <description>Stores the second part of SPI_PAD_CONF.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_DATA_PART0_0</name>
              <description>Stores the fist 14 bits of the zeroth part of system data.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_4</name>
          <description>BLOCK1 data register 4.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART0_1</name>
              <description>Stores the fist 32 bits of the zeroth part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_5</name>
          <description>BLOCK1 data register 5.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART0_2</name>
              <description>Stores the second 32 bits of the zeroth part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA0</name>
          <description>Register 0 of BLOCK2 (system).</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_0</name>
              <description>Stores the zeroth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA1</name>
          <description>Register 1 of BLOCK2 (system).</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_1</name>
              <description>Stores the first 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA2</name>
          <description>Register 2 of BLOCK2 (system).</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_2</name>
              <description>Stores the second 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA3</name>
          <description>Register 3 of BLOCK2 (system).</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_3</name>
              <description>Stores the third 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA4</name>
          <description>Register 4 of BLOCK2 (system).</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_4</name>
              <description>Stores the fourth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA5</name>
          <description>Register 5 of BLOCK2 (system).</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_5</name>
              <description>Stores the fifth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA6</name>
          <description>Register 6 of BLOCK2 (system).</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_6</name>
              <description>Stores the sixth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA7</name>
          <description>Register 7 of BLOCK2 (system).</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_7</name>
              <description>Stores the seventh 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA0</name>
          <description>Register 0 of BLOCK3 (user).</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA0</name>
              <description>Stores the zeroth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA1</name>
          <description>Register 1 of BLOCK3 (user).</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA1</name>
              <description>Stores the first 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA2</name>
          <description>Register 2 of BLOCK3 (user).</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA2</name>
              <description>Stores the second 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA3</name>
          <description>Register 3 of BLOCK3 (user).</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA3</name>
              <description>Stores the third 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA4</name>
          <description>Register 4 of BLOCK3 (user).</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA4</name>
              <description>Stores the fourth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA5</name>
          <description>Register 5 of BLOCK3 (user).</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA5</name>
              <description>Stores the fifth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA6</name>
          <description>Register 6 of BLOCK3 (user).</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA6</name>
              <description>Stores the sixth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA7</name>
          <description>Register 7 of BLOCK3 (user).</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA7</name>
              <description>Stores the seventh 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA0</name>
          <description>Register 0 of BLOCK4 (KEY0).</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA1</name>
          <description>Register 1 of BLOCK4 (KEY0).</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA1</name>
              <description>Stores the first 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA2</name>
          <description>Register 2 of BLOCK4 (KEY0).</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA2</name>
              <description>Stores the second 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA3</name>
          <description>Register 3 of BLOCK4 (KEY0).</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA3</name>
              <description>Stores the third 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA4</name>
          <description>Register 4 of BLOCK4 (KEY0).</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA4</name>
              <description>Stores the fourth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA5</name>
          <description>Register 5 of BLOCK4 (KEY0).</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA5</name>
              <description>Stores the fifth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA6</name>
          <description>Register 6 of BLOCK4 (KEY0).</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA6</name>
              <description>Stores the sixth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA7</name>
          <description>Register 7 of BLOCK4 (KEY0).</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA7</name>
              <description>Stores the seventh 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA0</name>
          <description>Register 0 of BLOCK5 (KEY1).</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA1</name>
          <description>Register 1 of BLOCK5 (KEY1).</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA1</name>
              <description>Stores the first 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA2</name>
          <description>Register 2 of BLOCK5 (KEY1).</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA2</name>
              <description>Stores the second 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA3</name>
          <description>Register 3 of BLOCK5 (KEY1).</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA3</name>
              <description>Stores the third 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA4</name>
          <description>Register 4 of BLOCK5 (KEY1).</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA4</name>
              <description>Stores the fourth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA5</name>
          <description>Register 5 of BLOCK5 (KEY1).</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA5</name>
              <description>Stores the fifth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA6</name>
          <description>Register 6 of BLOCK5 (KEY1).</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA6</name>
              <description>Stores the sixth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA7</name>
          <description>Register 7 of BLOCK5 (KEY1).</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA7</name>
              <description>Stores the seventh 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA0</name>
          <description>Register 0 of BLOCK6 (KEY2).</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA1</name>
          <description>Register 1 of BLOCK6 (KEY2).</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA1</name>
              <description>Stores the first 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA2</name>
          <description>Register 2 of BLOCK6 (KEY2).</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA2</name>
              <description>Stores the second 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA3</name>
          <description>Register 3 of BLOCK6 (KEY2).</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA3</name>
              <description>Stores the third 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA4</name>
          <description>Register 4 of BLOCK6 (KEY2).</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA4</name>
              <description>Stores the fourth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA5</name>
          <description>Register 5 of BLOCK6 (KEY2).</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA5</name>
              <description>Stores the fifth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA6</name>
          <description>Register 6 of BLOCK6 (KEY2).</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA6</name>
              <description>Stores the sixth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA7</name>
          <description>Register 7 of BLOCK6 (KEY2).</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA7</name>
              <description>Stores the seventh 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA0</name>
          <description>Register 0 of BLOCK7 (KEY3).</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA1</name>
          <description>Register 1 of BLOCK7 (KEY3).</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA1</name>
              <description>Stores the first 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA2</name>
          <description>Register 2 of BLOCK7 (KEY3).</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA2</name>
              <description>Stores the second 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA3</name>
          <description>Register 3 of BLOCK7 (KEY3).</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA3</name>
              <description>Stores the third 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA4</name>
          <description>Register 4 of BLOCK7 (KEY3).</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA4</name>
              <description>Stores the fourth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA5</name>
          <description>Register 5 of BLOCK7 (KEY3).</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA5</name>
              <description>Stores the fifth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA6</name>
          <description>Register 6 of BLOCK7 (KEY3).</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA6</name>
              <description>Stores the sixth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA7</name>
          <description>Register 7 of BLOCK7 (KEY3).</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA7</name>
              <description>Stores the seventh 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA0</name>
          <description>Register 0 of BLOCK8 (KEY4).</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA1</name>
          <description>Register 1 of BLOCK8 (KEY4).</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA1</name>
              <description>Stores the first 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA2</name>
          <description>Register 2 of BLOCK8 (KEY4).</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA2</name>
              <description>Stores the second 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA3</name>
          <description>Register 3 of BLOCK8 (KEY4).</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA3</name>
              <description>Stores the third 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA4</name>
          <description>Register 4 of BLOCK8 (KEY4).</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA4</name>
              <description>Stores the fourth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA5</name>
          <description>Register 5 of BLOCK8 (KEY4).</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA5</name>
              <description>Stores the fifth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA6</name>
          <description>Register 6 of BLOCK8 (KEY4).</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA6</name>
              <description>Stores the sixth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA7</name>
          <description>Register 7 of BLOCK8 (KEY4).</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA7</name>
              <description>Stores the seventh 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA0</name>
          <description>Register 0 of BLOCK9 (KEY5).</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA1</name>
          <description>Register 1 of BLOCK9 (KEY5).</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA1</name>
              <description>Stores the first 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA2</name>
          <description>Register 2 of BLOCK9 (KEY5).</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA2</name>
              <description>Stores the second 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA3</name>
          <description>Register 3 of BLOCK9 (KEY5).</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA3</name>
              <description>Stores the third 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA4</name>
          <description>Register 4 of BLOCK9 (KEY5).</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA4</name>
              <description>Stores the fourth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA5</name>
          <description>Register 5 of BLOCK9 (KEY5).</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA5</name>
              <description>Stores the fifth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA6</name>
          <description>Register 6 of BLOCK9 (KEY5).</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA6</name>
              <description>Stores the sixth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA7</name>
          <description>Register 7 of BLOCK9 (KEY5).</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA7</name>
              <description>Stores the seventh 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA0</name>
          <description>Register 0 of BLOCK10 (system).</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_0</name>
              <description>Stores the 0th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA1</name>
          <description>Register 1 of BLOCK9 (KEY5).</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_1</name>
              <description>Stores the 1st 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA2</name>
          <description>Register 2 of BLOCK10 (system).</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_2</name>
              <description>Stores the 2nd 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA3</name>
          <description>Register 3 of BLOCK10 (system).</description>
          <addressOffset>0x168</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_3</name>
              <description>Stores the 3rd 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA4</name>
          <description>Register 4 of BLOCK10 (system).</description>
          <addressOffset>0x16C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_4</name>
              <description>Stores the 4th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA5</name>
          <description>Register 5 of BLOCK10 (system).</description>
          <addressOffset>0x170</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_5</name>
              <description>Stores the 5th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA6</name>
          <description>Register 6 of BLOCK10 (system).</description>
          <addressOffset>0x174</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_6</name>
              <description>Stores the 6th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA7</name>
          <description>Register 7 of BLOCK10 (system).</description>
          <addressOffset>0x178</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_7</name>
              <description>Stores the 7th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR0</name>
          <description>Programming error record register 0 of BLOCK0.</description>
          <addressOffset>0x17C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RD_DIS_ERR</name>
              <description>If any bit in RD_DIS is 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_RTC_RAM_BOOT_ERR</name>
              <description>If DIS_RTC_RAM_BOOT is 1, then it indicates a programming error.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_ICACHE_ERR</name>
              <description>If DIS_ICACHE is 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_JTAG_ERR</name>
              <description>If DIS_USB_JTAG is 1, then it indicates a programming error.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_ICACHE_ERR</name>
              <description>If DIS_DOWNLOAD_ICACHE is 1, then it indicates a programming error.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DEVICE_ERR</name>
              <description>If DIS_USB_DEVICE is 1, then it indicates a programming error.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_FORCE_DOWNLOAD_ERR</name>
              <description>If DIS_FORCE_DOWNLOAD is 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED6_ERR</name>
              <description>Reserved.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_CAN_ERR</name>
              <description>If DIS_CAN is 1, then it indicates a programming error.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>JTAG_SEL_ENABLE_ERR</name>
              <description>If JTAG_SEL_ENABLE is 1, then it indicates a programming error.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_DIS_JTAG_ERR</name>
              <description>If SOFT_DIS_JTAG is 1, then it indicates a programming error.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_PAD_JTAG_ERR</name>
              <description>If DIS_PAD_JTAG is 1, then it indicates a programming error.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR</name>
              <description>If DIS_DOWNLOAD_MANUAL_ENCRYPT is 1, then it indicates a programming error.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFH_ERR</name>
              <description>If any bit in USB_DREFH is 1, then it indicates a programming error.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFL_ERR</name>
              <description>If any bit in USB_DREFL is 1, then it indicates a programming error.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_EXCHG_PINS_ERR</name>
              <description>If USB_EXCHG_PINS is 1, then it indicates a programming error.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_AS_GPIO_ERR</name>
              <description>If VDD_SPI_AS_GPIO is 1, then it indicates a programming error.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BTLC_GPIO_ENABLE_ERR</name>
              <description>If any bit in BTLC_GPIO_ENABLE is 1, then it indicates a programming error.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWERGLITCH_EN_ERR</name>
              <description>If POWERGLITCH_EN is 1, then it indicates a programming error.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_GLITCH_DSENSE_ERR</name>
              <description>If any bit in POWER_GLITCH_DSENSE is 1, then it indicates a programming error.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR1</name>
          <description>Programming error record register 1 of BLOCK0.</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RPT4_RESERVED2_ERR</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_DELAY_SEL_ERR</name>
              <description>If any bit in WDT_DELAY_SEL is 1, then it indicates a programming error.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_BOOT_CRYPT_CNT_ERR</name>
              <description>If any bit in SPI_BOOT_CRYPT_CNT is 1, then it indicates a programming error.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE0_ERR</name>
              <description>If SECURE_BOOT_KEY_REVOKE0 is 1, then it indicates a programming error.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE1_ERR</name>
              <description>If SECURE_BOOT_KEY_REVOKE1 is 1, then it indicates a programming error.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE2_ERR</name>
              <description>If SECURE_BOOT_KEY_REVOKE2 is 1, then it indicates a programming error.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_0_ERR</name>
              <description>If any bit in KEY_PURPOSE_0 is 1, then it indicates a programming error.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_1_ERR</name>
              <description>If any bit in KEY_PURPOSE_1 is 1, then it indicates a programming error.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR2</name>
          <description>Programming error record register 2 of BLOCK0.</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_PURPOSE_2_ERR</name>
              <description>If any bit in KEY_PURPOSE_2 is 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_3_ERR</name>
              <description>If any bit in KEY_PURPOSE_3 is 1, then it indicates a programming error.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_4_ERR</name>
              <description>If any bit in KEY_PURPOSE_4 is 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_5_ERR</name>
              <description>If any bit in KEY_PURPOSE_5 is 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED3_ERR</name>
              <description>Reserved.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN_ERR</name>
              <description>If SECURE_BOOT_EN is 1, then it indicates a programming error.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AGGRESSIVE_REVOKE_ERR</name>
              <description>If SECURE_BOOT_AGGRESSIVE_REVOKE is 1, then it indicates a programming error.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED0_ERR</name>
              <description>Reserved.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TPUW_ERR</name>
              <description>If any bit in FLASH_TPUM is 1, then it indicates a programming error.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR3</name>
          <description>Programming error record register 3 of BLOCK0.</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIS_DOWNLOAD_MODE_ERR</name>
              <description>If DIS_DOWNLOAD_MODE is 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_LEGACY_SPI_BOOT_ERR</name>
              <description>If DIS_LEGACY_SPI_BOOT is 1, then it indicates a programming error.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CHANNEL_ERR</name>
              <description>If UART_PRINT_CHANNEL is 1, then it indicates a programming error.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_MODE_ERR</name>
              <description>If FLASH_ECC_MODE is 1, then it indicates a programming error.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DOWNLOAD_MODE_ERR</name>
              <description>If DIS_USB_DOWNLOAD_MODE is 1, then it indicates a programming error.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENABLE_SECURITY_DOWNLOAD_ERR</name>
              <description>If ENABLE_SECURITY_DOWNLOAD is 1, then it indicates a programming error.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CONTROL_ERR</name>
              <description>If any bit in UART_PRINT_CONTROL is 1, then it indicates a programming error.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PIN_POWER_SELECTION_ERR</name>
              <description>If PIN_POWER_SELECTION is 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TYPE_ERR</name>
              <description>If FLASH_TYPE is 1, then it indicates a programming error.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_PAGE_SIZE_ERR</name>
              <description>If any bits in FLASH_PAGE_SIZE is 1, then it indicates a programming error.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_EN_ERR</name>
              <description>If FLASH_ECC_EN_ERR is 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_SEND_RESUME_ERR</name>
              <description>If FORCE_SEND_RESUME is 1, then it indicates a programming error.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_VERSION_ERR</name>
              <description>If any bit in SECURE_VERSION is 1, then it indicates a programming error.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED1_ERR</name>
              <description>Reserved.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR4</name>
          <description>Programming error record register 4 of BLOCK0.</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RPT4_RESERVED4_ERR</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_RS_ERR0</name>
          <description>Programming error record register 0 of BLOCK1-10.</description>
          <addressOffset>0x1C0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_SPI_8M_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAC_SPI_8M_FAIL</name>
              <description>0: Means no failure and that the data of MAC_SPI_8M is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART1_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART1_FAIL</name>
              <description>0: Means no failure and that the data of system part1 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USR_DATA_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USR_DATA_FAIL</name>
              <description>0: Means no failure and that the user data is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY0_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY0_FAIL</name>
              <description>0: Means no failure and that the data of key0 is reliable 1: Means that programming key0 failed and the number of error bytes is over 6.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1_FAIL</name>
              <description>0: Means no failure and that the data of key1 is reliable 1: Means that programming key1 failed and the number of error bytes is over 6.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2_FAIL</name>
              <description>0: Means no failure and that the data of key2 is reliable 1: Means that programming key2 failed and the number of error bytes is over 6.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3_FAIL</name>
              <description>0: Means no failure and that the data of key3 is reliable 1: Means that programming key3 failed and the number of error bytes is over 6.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY4_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY4_FAIL</name>
              <description>0: Means no failure and that the data of key4 is reliable 1: Means that programming key4 failed and the number of error bytes is over 6.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_RS_ERR1</name>
          <description>Programming error record register 1 of BLOCK1-10.</description>
          <addressOffset>0x1C4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY5_FAIL</name>
              <description>0: Means no failure and that the data of KEY5 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART2_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART2_FAIL</name>
              <description>0: Means no failure and that the data of system part2 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK</name>
          <description>eFuse clcok configuration register.</description>
          <addressOffset>0x1C8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>EFUSE_MEM_FORCE_PD</name>
              <description>Set this bit to force eFuse SRAM into power-saving mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_CLK_FORCE_ON</name>
              <description>Set this bit and force to activate clock signal of eFuse SRAM.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_MEM_FORCE_PU</name>
              <description>Set this bit to force eFuse SRAM into working mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>Set this bit and force to enable clock signal of eFuse memory.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF</name>
          <description>eFuse operation mode configuraiton register;</description>
          <addressOffset>0x1CC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OP_CODE</name>
              <description>0x5A5A: Operate programming command 0x5AA5: Operate read command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>eFuse status register.</description>
          <addressOffset>0x1D0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Indicates the state of the eFuse state machine.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_LOAD_SW</name>
              <description>The value of OTP_LOAD_SW.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_VDDQ_C_SYNC2</name>
              <description>The value of OTP_VDDQ_C_SYNC2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_STROBE_SW</name>
              <description>The value of OTP_STROBE_SW.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_CSB_SW</name>
              <description>The value of OTP_CSB_SW.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_PGENB_SW</name>
              <description>The value of OTP_PGENB_SW.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_VDDQ_IS_SW</name>
              <description>The value of OTP_VDDQ_IS_SW.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REPEAT_ERR_CNT</name>
              <description>Indicates the number of error bits during programming BLOCK0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD</name>
          <description>eFuse command register.</description>
          <addressOffset>0x1D4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_CMD</name>
              <description>Set this bit to send read command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_CMD</name>
              <description>Set this bit to send programming command.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLK_NUM</name>
              <description>The serial number of the block to be programmed. Value 0-10 corresponds to block number 0-10, respectively.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>eFuse raw interrupt register.</description>
          <addressOffset>0x1D8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_RAW</name>
              <description>The raw bit signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_DONE_INT_RAW</name>
              <description>The raw bit signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>eFuse interrupt status register.</description>
          <addressOffset>0x1DC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_ST</name>
              <description>The status signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_ST</name>
              <description>The status signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>eFuse interrupt enable register.</description>
          <addressOffset>0x1E0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_ENA</name>
              <description>The enable signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_DONE_INT_ENA</name>
              <description>The enable signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>eFuse interrupt clear register.</description>
          <addressOffset>0x1E4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_CLR</name>
              <description>The clear signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_CLR</name>
              <description>The clear signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_CONF</name>
          <description>Controls the eFuse programming voltage.</description>
          <addressOffset>0x1E8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0001FE1C</resetValue>
          <fields>
            <field>
              <name>DAC_CLK_DIV</name>
              <description>Controls the division factor of the rising clock of the programming voltage.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLK_PAD_SEL</name>
              <description>Don't care.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_NUM</name>
              <description>Controls the rising period of the programming voltage.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OE_CLR</name>
              <description>Reduces the power supply of the programming voltage.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_TIM_CONF</name>
          <description>Configures read timing parameters.</description>
          <addressOffset>0x1EC</addressOffset>
          <size>0x20</size>
          <resetValue>0x12000000</resetValue>
          <fields>
            <field>
              <name>READ_INIT_NUM</name>
              <description>Configures the initial read time of eFuse.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF1</name>
          <description>Configurarion register 1 of eFuse programming timing parameters.</description>
          <addressOffset>0x1F0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00288000</resetValue>
          <fields>
            <field>
              <name>PWR_ON_NUM</name>
              <description>Configures the power up time for VDDQ.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF2</name>
          <description>Configurarion register 2 of eFuse programming timing parameters.</description>
          <addressOffset>0x1F4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000190</resetValue>
          <fields>
            <field>
              <name>PWR_OFF_NUM</name>
              <description>Configures the power outage time for VDDQ.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>eFuse version register.</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02007200</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Stores eFuse version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EXTMEM</name>
      <description>External Memory</description>
      <groupName>EXTMEM</groupName>
      <baseAddress>0x600C4000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x108</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ICACHE_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_ENABLE</name>
              <description>The bit is used to activate the data cache. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_CTRL1</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>ICACHE_SHUT_IBUS</name>
              <description>The bit is used to disable core0 ibus, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SHUT_DBUS</name>
              <description>The bit is used to disable core1 ibus, 0: enable, 1: disable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_TAG_POWER_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>ICACHE_TAG_MEM_FORCE_ON</name>
              <description>The bit is used to close clock gating of  icache tag memory. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_TAG_MEM_FORCE_PD</name>
              <description>The bit is used to power  icache tag memory down, 0: follow rtc_lslp, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_TAG_MEM_FORCE_PU</name>
              <description>The bit is used to power  icache tag memory up, 0: follow rtc_lslp, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT0_EN</name>
              <description>The bit is used to enable the first section of prelock function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOCK_SCT1_EN</name>
              <description>The bit is used to enable the second section of prelock function.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_SCT0_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT0_ADDR</name>
              <description>The bits are used to configure the first start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT0_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_SCT1_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT1_ADDR</name>
              <description>The bits are used to configure the second start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT1_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_SCT_SIZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT1_SIZE</name>
              <description>The bits are used to configure the second length of data locking, which is combined with ICACHE_PRELOCK_SCT1_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOCK_SCT0_SIZE</name>
              <description>The bits are used to configure the first length of data locking, which is combined with ICACHE_PRELOCK_SCT0_ADDR_REG</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_LOCK_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>ICACHE_LOCK_ENA</name>
              <description>The bit is used to enable lock operation. It will be cleared by hardware after lock operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_UNLOCK_ENA</name>
              <description>The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_LOCK_DONE</name>
              <description>The bit is used to indicate unlock/lock operation is finished.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_LOCK_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_LOCK_ADDR</name>
              <description>The bits are used to configure the start virtual address for lock operations. It should be combined with ICACHE_LOCK_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_LOCK_SIZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_LOCK_SIZE</name>
              <description>The bits are used to configure the length for lock operations. The bits are the counts of cache block. It should be combined with ICACHE_LOCK_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>ICACHE_INVALIDATE_ENA</name>
              <description>The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SYNC_DONE</name>
              <description>The bit is used to indicate invalidate operation is finished.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_ADDR</name>
              <description>The bits are used to configure the start virtual address for clean operations. It should be combined with ICACHE_SYNC_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_SIZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_SIZE</name>
              <description>The bits are used to configure the length for sync operations. The bits are the counts of cache block. It should be combined with ICACHE_SYNC_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_ENA</name>
              <description>The bit is used to enable preload operation. It will be cleared by hardware after preload operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_DONE</name>
              <description>The bit is used to indicate preload operation is finished.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_ORDER</name>
              <description>The bit is used to configure the direction of preload operation. 1: descending, 0: ascending.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_ADDR</name>
              <description>The bits are used to configure the start virtual address for preload operation. It should be combined with ICACHE_PRELOAD_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_SIZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_SIZE</name>
              <description>The bits are used to configure the length for preload operation. The bits are the counts of cache block. It should be combined with ICACHE_PRELOAD_ADDR_REG..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT0_ENA</name>
              <description>The bits are used to enable the first section for autoload operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_SCT1_ENA</name>
              <description>The bits are used to enable the second section for autoload operation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_ENA</name>
              <description>The bit is used to enable and disable autoload operation. It is combined with icache_autoload_done. 1: enable, 0: disable.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_DONE</name>
              <description>The bit is used to indicate autoload operation is finished.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_ORDER</name>
              <description>The bits are used to configure the direction of autoload. 1: descending, 0: ascending.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_RQST</name>
              <description>The bits are used to configure trigger conditions for autoload. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT0_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT0_ADDR</name>
              <description>The bits are used to configure the start virtual address of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT0_SIZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT0_SIZE</name>
              <description>The bits are used to configure the length of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT1_ADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT1_ADDR</name>
              <description>The bits are used to configure the start virtual address of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT1_SIZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT1_SIZE</name>
              <description>The bits are used to configure the length of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_TO_FLASH_START_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x42000000</resetValue>
          <fields>
            <field>
              <name>IBUS_TO_FLASH_START_VADDR</name>
              <description>The bits are used to configure the start virtual address of ibus to access flash. The register is used to give constraints to ibus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_TO_FLASH_END_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x427FFFFF</resetValue>
          <fields>
            <field>
              <name>IBUS_TO_FLASH_END_VADDR</name>
              <description>The bits are used to configure the end virtual address of ibus to access flash. The register is used to give constraints to ibus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_TO_FLASH_START_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x3C000000</resetValue>
          <fields>
            <field>
              <name>DBUS_TO_FLASH_START_VADDR</name>
              <description>The bits are used to configure the start virtual address of dbus to access flash. The register is used to give constraints to dbus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_TO_FLASH_END_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x3C7FFFFF</resetValue>
          <fields>
            <field>
              <name>DBUS_TO_FLASH_END_VADDR</name>
              <description>The bits are used to configure the end virtual address of dbus to access flash. The register is used to give constraints to dbus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ACS_CNT_CLR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_ACS_CNT_CLR</name>
              <description>The bit is used to clear ibus counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DBUS_ACS_CNT_CLR</name>
              <description>The bit is used to clear dbus counter.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_ACS_MISS_CNT</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by ibus access flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_ACS_CNT</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_ACS_CNT</name>
              <description>The bits are used to count the number of ibus access flash through icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_ACS_FLASH_MISS_CNT</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_ACS_FLASH_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by dbus access flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_ACS_CNT</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_ACS_CNT</name>
              <description>The bits are used to count the number of dbus access flash through icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ILG_INT_ENA</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_OP_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by sync configurations fault.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_OP_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by preload configurations fault.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by mmu entry fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBUS_CNT_OVF_INT_ENA</name>
              <description>The bit is used to enable interrupt by ibus counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUS_CNT_OVF_INT_ENA</name>
              <description>The bit is used to enable interrupt by dbus counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ILG_INT_CLR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_OP_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by sync configurations fault.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_OP_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by preload configurations fault.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by mmu entry fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IBUS_CNT_OVF_INT_CLR</name>
              <description>The bit is used to clear interrupt by ibus counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DBUS_CNT_OVF_INT_CLR</name>
              <description>The bit is used to clear interrupt by dbus counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ILG_INT_ST</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_OP_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by sync configurations fault.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_OP_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by preload configurations fault.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by mmu entry fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus access flash/spiram counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus access flash/spiram miss counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus access flash/spiram counter overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS_ACS_FLASH_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus access flash miss counter overflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_ACS_CACHE_INT_ENA</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ACS_MSK_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access icache while the corresponding ibus is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_IBUS_WR_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_IBUS_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_DBUS_ACS_MSK_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access icache while the corresponding dbus is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_DBUS_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_DBUS_WR_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by dbus trying to write icache</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_ACS_CACHE_INT_CLR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ACS_MSK_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access icache while the corresponding ibus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_WR_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_ACS_MSK_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access icache while the corresponding dbus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_WR_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by dbus trying to write icache</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_ACS_CACHE_INT_ST</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access  icache while the core0_ibus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_WR_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access icache while the core0_dbus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_WR_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by dbus trying to write icache</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_DBUS_REJECT_ST</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_DBUS_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access dbus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_WORLD</name>
              <description>The bit is used to indicate the world of CPU access dbus when authentication fail. 0: WORLD0, 1: WORLD1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_DBUS_REJECT_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE0_DBUS_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access dbus when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_IBUS_REJECT_ST</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access ibus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_WORLD</name>
              <description>The bit is used to indicate the world of CPU access ibus when authentication fail. 0: WORLD0, 1: WORLD1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_IBUS_REJECT_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE0_IBUS_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access  ibus when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_FAULT_CONTENT</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_FAULT_CONTENT</name>
              <description>The bits are used to indicate the content of mmu entry which cause mmu fault..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CACHE_MMU_FAULT_CODE</name>
              <description>The right-most 3 bits are used to indicate the operations which cause mmu fault occurrence. 0: default, 1: cpu miss, 2: preload miss, 3: writeback, 4: cpu miss evict recovery address, 5: load miss evict recovery address, 6: external dma tx, 7: external dma rx. The most significant bit is used to indicate this operation occurs in which one icache.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_FAULT_VADDR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_FAULT_VADDR</name>
              <description>The bits are used to indicate the virtual address which cause mmu fault..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_WRAP_AROUND_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_FLASH_WRAP_AROUND</name>
              <description>The bit is used to enable wrap around mode when read data from flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_POWER_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>CACHE_MMU_MEM_FORCE_ON</name>
              <description>The bit is used to enable clock gating to save power when access mmu memory, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_MMU_MEM_FORCE_PD</name>
              <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_MMU_MEM_FORCE_PU</name>
              <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_STATE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>ICACHE_STATE</name>
              <description>The bit is used to indicate whether  icache main fsm is in idle state or not. 1: in idle state,  0: not in idle state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ENCRYPT_DECRYPT_RECORD_DISABLE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RECORD_DISABLE_DB_ENCRYPT</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RECORD_DISABLE_G0CB_DECRYPT</name>
              <description>Reserved.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ENCRYPT_DECRYPT_CLK_FORCE_ON</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>CLK_FORCE_ON_MANUAL_CRYPT</name>
              <description>The bit is used to close clock gating of manual crypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_FORCE_ON_AUTO_CRYPT</name>
              <description>The bit is used to close clock gating of automatic crypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_FORCE_ON_CRYPT</name>
              <description>The bit is used to close clock gating of external memory encrypt and decrypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_PRELOAD_INT_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_INT_ST</name>
              <description>The bit is used to indicate the interrupt by  icache pre-load done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_INT_ENA</name>
              <description>The bit is used to enable the interrupt by  icache pre-load done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_INT_CLR</name>
              <description>The bit is used to clear the interrupt by  icache pre-load done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_SYNC_INT_CTRL</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_INT_ST</name>
              <description>The bit is used to indicate the interrupt by  icache sync done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_SYNC_INT_ENA</name>
              <description>The bit is used to enable the interrupt by  icache sync done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SYNC_INT_CLR</name>
              <description>The bit is used to clear the interrupt by  icache sync done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_OWNER</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_OWNER</name>
              <description>The bits are used to specify the owner of MMU.bit0/bit2: ibus, bit1/bit3: dbus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CONF_MISC</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>CACHE_IGNORE_PRELOAD_MMU_ENTRY_FAULT</name>
              <description>The bit is used to disable checking mmu entry fault by preload operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_IGNORE_SYNC_MMU_ENTRY_FAULT</name>
              <description>The bit is used to disable checking mmu entry fault by sync operation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_TRACE_ENA</name>
              <description>The bit is used to enable cache trace function.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_FREEZE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENA</name>
              <description>The bit is used to enable icache freeze mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>The bit is used to configure freeze mode, 0:  assert busy if CPU miss 1: assert hit if CPU miss</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DONE</name>
              <description>The bit is used to indicate icache freeze success</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_ATOMIC_OPERATE_ENA</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>ICACHE_ATOMIC_OPERATE_ENA</name>
              <description>The bit is used to activate icache atomic operation protection. In this case, sync/lock operation can not interrupt miss-work. This feature does not work during invalidateAll operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_REQUEST</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BYPASS</name>
              <description>The bit is used to disable request recording which could cause performance issue</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_PMS_TBL_LOCK</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_PMS_LOCK</name>
              <description>The bit is used to configure the ibus permission control section boundary0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_PMS_TBL_BOUNDARY0</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_PMS_BOUNDARY0</name>
              <description>The bit is used to configure the ibus permission control section boundary0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_PMS_TBL_BOUNDARY1</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>IBUS_PMS_BOUNDARY1</name>
              <description>The bit is used to configure the ibus permission control section boundary1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_PMS_TBL_BOUNDARY2</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>IBUS_PMS_BOUNDARY2</name>
              <description>The bit is used to configure the ibus permission control section boundary2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_PMS_TBL_ATTR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>IBUS_PMS_SCT1_ATTR</name>
              <description>The bit is used to configure attribute of the ibus permission control section1, bit0: fetch in world0, bit1: load in world0, bit2: fetch in world1, bit3: load in world1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBUS_PMS_SCT2_ATTR</name>
              <description>The bit is used to configure attribute of the ibus permission control section2, bit0: fetch in world0, bit1: load in world0, bit2: fetch in world1, bit3: load in world1</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_PMS_TBL_LOCK</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_PMS_LOCK</name>
              <description>The bit is used to configure the ibus permission control section boundary0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_PMS_TBL_BOUNDARY0</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_PMS_BOUNDARY0</name>
              <description>The bit is used to configure the dbus permission control section boundary0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_PMS_TBL_BOUNDARY1</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>DBUS_PMS_BOUNDARY1</name>
              <description>The bit is used to configure the dbus permission control section boundary1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_PMS_TBL_BOUNDARY2</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>DBUS_PMS_BOUNDARY2</name>
              <description>The bit is used to configure the dbus permission control section boundary2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_PMS_TBL_ATTR</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>DBUS_PMS_SCT1_ATTR</name>
              <description>The bit is used to configure attribute of the dbus permission control section1, bit0: load in world0, bit2: load in world1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUS_PMS_SCT2_ATTR</name>
              <description>The bit is used to configure attribute of the dbus permission control section2, bit0: load in world0, bit2: load in world1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>clock gate enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DATE</name>
          <description>This description will be updated in the near future.</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02007160</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version information</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIO</name>
      <description>General Purpose Input/Output</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x60004000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x31C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIO</name>
        <value>16</value>
      </interrupt>
      <interrupt>
        <name>GPIO_NMI</name>
        <value>17</value>
      </interrupt>
      <registers>
        <register>
          <name>BT_SELECT</name>
          <description>GPIO bit select register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BT_SEL</name>
              <description>GPIO bit select register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT</name>
          <description>GPIO output register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA_ORIG</name>
              <description>GPIO output register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_W1TS</name>
          <description>GPIO output set register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_W1TS</name>
              <description>GPIO output set register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_W1TC</name>
          <description>GPIO output clear register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_W1TC</name>
              <description>GPIO output clear register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_SELECT</name>
          <description>GPIO sdio select register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_SEL</name>
              <description>GPIO sdio select register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE</name>
          <description>GPIO output enable register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>GPIO output enable register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TS</name>
          <description>GPIO output enable set register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE_W1TS</name>
              <description>GPIO output enable set register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TC</name>
          <description>GPIO output enable clear register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE_W1TC</name>
              <description>GPIO output enable clear register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STRAP</name>
          <description>pad strapping register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STRAPPING</name>
              <description>pad strapping register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN</name>
          <description>GPIO input register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA_NEXT</name>
              <description>GPIO input register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>GPIO interrupt status register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERRUPT</name>
              <description>GPIO interrupt status register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_W1TS</name>
          <description>GPIO interrupt status set register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_W1TS</name>
              <description>GPIO interrupt status set register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_W1TC</name>
          <description>GPIO interrupt status clear register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_W1TC</name>
              <description>GPIO interrupt status clear register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_INT</name>
          <description>GPIO PRO_CPU interrupt status register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PROCPU_INT</name>
              <description>GPIO PRO_CPU interrupt status register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_NMI_INT</name>
          <description>GPIO PRO_CPU(not shielded) interrupt status register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PROCPU_NMI_INT</name>
              <description>GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUSDIO_INT</name>
          <description>GPIO CPUSDIO interrupt status register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_INT</name>
              <description>GPIO CPUSDIO interrupt status register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>26</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-25</dimIndex>
          <name>PIN%s</name>
          <description>GPIO pin configuration register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYNC2_BYPASS</name>
              <description>set GPIO input_sync2 signal mode. 0:disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_DRIVER</name>
              <description>set this bit to select pad driver. 1:open-drain. 0:normal.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC1_BYPASS</name>
              <description>set GPIO input_sync1 signal mode. 0:disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_TYPE</name>
              <description>set this value to choose interrupt mode. 0:disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_ENABLE</name>
              <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONFIG</name>
              <description>reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_ENA</name>
              <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_NEXT</name>
          <description>GPIO interrupt source register</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_INTERRUPT_NEXT</name>
              <description>GPIO interrupt source register for GPIO0-25</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>128</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-127</dimIndex>
          <name>FUNC%s_IN_SEL_CFG</name>
          <description>GPIO input function configuration register</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_SEL</name>
              <description>set this value: s=0-53: connect GPIO[s] to this port. s=0x38: set this port always high level. s=0x3C: set this port always low level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_INV_SEL</name>
              <description>set this bit to invert input signal. 1:invert. 0:not invert.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL</name>
              <description>set this bit to bypass GPIO. 1:do not bypass GPIO. 0:bypass GPIO.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>26</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-25</dimIndex>
          <name>FUNC%s_OUT_SEL_CFG</name>
          <description>GPIO output function select register</description>
          <addressOffset>0x554</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>OUT_SEL</name>
              <description>The value of the bits: 0&lt;=s&lt;=256. Set the value to select output signal. s=0-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INV_SEL</name>
              <description>set this bit to invert output signal.1:invert.0:not invert.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OEN_SEL</name>
              <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.0:use peripheral output enable signal.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OEN_INV_SEL</name>
              <description>set this bit to invert output enable signal.1:invert.0:not invert.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>GPIO clock gate register</description>
          <addressOffset>0x62C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>set this bit to enable GPIO clock gate</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DATE</name>
          <description>GPIO version register</description>
          <addressOffset>0x6FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02006130</resetValue>
          <fields>
            <field>
              <name>REG_DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIOSD</name>
      <description>Sigma-Delta Modulation</description>
      <groupName>GPIOSD</groupName>
      <baseAddress>0x60004F00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SIGMADELTA%s</name>
          <description>Duty Cycle Configure Register of SDM%s</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FF00</resetValue>
          <fields>
            <field>
              <name>SD0_IN</name>
              <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SD0_PRESCALE</name>
              <description>This field is used to set a divider value to divide APB clock.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_CG</name>
          <description>Clock Gating Configure Register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Clock enable bit of configuration registers for sigma delta modulation.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_MISC</name>
          <description>MISC Register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FUNCTION_CLK_EN</name>
              <description>Clock enable bit of sigma delta modulation.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SWAP</name>
              <description>Reserved.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_VERSION</name>
          <description>Version Control Register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x02006230</resetValue>
          <fields>
            <field>
              <name>GPIO_SD_DATE</name>
              <description>Version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>HMAC</name>
      <description>HMAC (Hash-based Message Authentication Code) Accelerator</description>
      <groupName>HMAC</groupName>
      <baseAddress>0x6003E000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SET_START</name>
          <description>Process control register 0.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START</name>
              <description>Start hmac operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_PURPOSE</name>
          <description>Configure purpose.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PURPOSE_SET</name>
              <description>Set hmac parameter purpose.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_KEY</name>
          <description>Configure key.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_SET</name>
              <description>Set hmac parameter key.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_FINISH</name>
          <description>Finish initial configuration.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_PARA_END</name>
              <description>Finish hmac configuration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_ONE</name>
          <description>Process control register 1.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_ONE</name>
              <description>Call SHA to calculate one message block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_ING</name>
          <description>Process control register 2.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_ING</name>
              <description>Continue typical hmac.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_END</name>
          <description>Process control register 3.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_END</name>
              <description>Start hardware padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_RESULT_FINISH</name>
          <description>Process control register 4.</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_RESULT_END</name>
              <description>After read result from upstream, then let hmac back to idle.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_INVALIDATE_JTAG</name>
          <description>Invalidate register 0.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_INVALIDATE_JTAG</name>
              <description>Clear result from hmac downstream JTAG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_INVALIDATE_DS</name>
          <description>Invalidate register 1.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_INVALIDATE_DS</name>
              <description>Clear result from hmac downstream DS.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_ERROR</name>
          <description>Error register.</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUREY_CHECK</name>
              <description>Hmac configuration state. 0: key are agree with purpose. 1: error</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_BUSY</name>
          <description>Busy register.</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUSY_STATE</name>
              <description>Hmac state. 1'b0: idle. 1'b1: busy</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>64</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>WR_MESSAGE_MEM[%s]</name>
          <description>Message block memory.</description>
          <addressOffset>0x80</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>32</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>RD_RESULT_MEM[%s]</name>
          <description>Result from upstream.</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>SET_MESSAGE_PAD</name>
          <description>Process control register 5.</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_PAD</name>
              <description>Start software padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ONE_BLOCK</name>
          <description>Process control register 6.</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_ONE_BLOCK</name>
              <description>Don't have to do padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SOFT_JTAG_CTRL</name>
          <description>Jtag register 0.</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SOFT_JTAG_CTRL</name>
              <description>Turn on JTAG verification.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_JTAG</name>
          <description>Jtag register 1.</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WR_JTAG</name>
              <description>32-bit of key to be compared.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2C0</name>
      <description>I2C (Inter-Integrated Circuit) Controller</description>
      <groupName>I2C</groupName>
      <baseAddress>0x60013000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x90</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2C_EXT0</name>
        <value>29</value>
      </interrupt>
      <registers>
        <register>
          <name>SCL_LOW_PERIOD</name>
          <description>I2C_SCL_LOW_PERIOD_REG</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCL_LOW_PERIOD</name>
              <description>reg_scl_low_period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTR</name>
          <description>I2C_CTR_REG</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000020B</resetValue>
          <fields>
            <field>
              <name>SDA_FORCE_OUT</name>
              <description>reg_sda_force_out</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FORCE_OUT</name>
              <description>reg_scl_force_out</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_SCL_LEVEL</name>
              <description>reg_sample_scl_level</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FULL_ACK_LEVEL</name>
              <description>reg_rx_full_ack_level</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>reg_ms_mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START</name>
              <description>reg_trans_start</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_LSB_FIRST</name>
              <description>reg_tx_lsb_first</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LSB_FIRST</name>
              <description>reg_rx_lsb_first</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>reg_clk_en</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_EN</name>
              <description>reg_arbitration_en</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FSM_RST</name>
              <description>reg_fsm_rst</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPGATE</name>
              <description>reg_conf_upgate</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_TX_AUTO_START_EN</name>
              <description>reg_slv_tx_auto_start_en</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_RW_CHECK_EN</name>
              <description>reg_addr_10bit_rw_check_en</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_BROADCASTING_EN</name>
              <description>reg_addr_broadcasting_en</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <description>I2C_SR_REG</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000C000</resetValue>
          <fields>
            <field>
              <name>RESP_REC</name>
              <description>reg_resp_rec</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW</name>
              <description>reg_slave_rw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARB_LOST</name>
              <description>reg_arb_lost</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_BUSY</name>
              <description>reg_bus_busy</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDRESSED</name>
              <description>reg_slave_addressed</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_CNT</name>
              <description>reg_rxfifo_cnt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STRETCH_CAUSE</name>
              <description>reg_stretch_cause</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_CNT</name>
              <description>reg_txfifo_cnt</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_STATE_LAST</name>
              <description>reg_scl_main_state_last</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_STATE_LAST</name>
              <description>reg_scl_state_last</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TO</name>
          <description>I2C_TO_REG</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TIME_OUT_VALUE</name>
              <description>reg_time_out_value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_EN</name>
              <description>reg_time_out_en</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE_ADDR</name>
          <description>I2C_SLAVE_ADDR_REG</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_ADDR</name>
              <description>reg_slave_addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_EN</name>
              <description>reg_addr_10bit_en</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_ST</name>
          <description>I2C_FIFO_ST_REG</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_RADDR</name>
              <description>reg_rxfifo_raddr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_WADDR</name>
              <description>reg_rxfifo_waddr</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_RADDR</name>
              <description>reg_txfifo_raddr</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WADDR</name>
              <description>reg_txfifo_waddr</description>
              <bitOffset>15</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW_POINT</name>
              <description>reg_slave_rw_point</description>
              <bitOffset>22</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_CONF</name>
          <description>I2C_FIFO_CONF_REG</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000408B</resetValue>
          <fields>
            <field>
              <name>RXFIFO_WM_THRHD</name>
              <description>reg_rxfifo_wm_thrhd</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_WM_THRHD</name>
              <description>reg_txfifo_wm_thrhd</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NONFIFO_EN</name>
              <description>reg_nonfifo_en</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_ADDR_CFG_EN</name>
              <description>reg_fifo_addr_cfg_en</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_RST</name>
              <description>reg_rx_fifo_rst</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_RST</name>
              <description>reg_tx_fifo_rst</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_PRT_EN</name>
              <description>reg_fifo_prt_en</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA</name>
          <description>I2C_FIFO_DATA_REG</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FIFO_RDATA</name>
              <description>reg_fifo_rdata</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>I2C_INT_RAW_REG</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_RAW</name>
              <description>reg_rxfifo_wm_int_raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_RAW</name>
              <description>reg_txfifo_wm_int_raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_RAW</name>
              <description>reg_rxfifo_ovf_int_raw</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_RAW</name>
              <description>reg_end_detect_int_raw</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_RAW</name>
              <description>reg_byte_trans_done_int_raw</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_RAW</name>
              <description>reg_arbitration_lost_int_raw</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_RAW</name>
              <description>reg_mst_txfifo_udf_int_raw</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_RAW</name>
              <description>reg_trans_complete_int_raw</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_RAW</name>
              <description>reg_time_out_int_raw</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_RAW</name>
              <description>reg_trans_start_int_raw</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACK_INT_RAW</name>
              <description>reg_nack_int_raw</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_RAW</name>
              <description>reg_txfifo_ovf_int_raw</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_RAW</name>
              <description>reg_rxfifo_udf_int_raw</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_RAW</name>
              <description>reg_scl_st_to_int_raw</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_RAW</name>
              <description>reg_scl_main_st_to_int_raw</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DET_START_INT_RAW</name>
              <description>reg_det_start_int_raw</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_RAW</name>
              <description>reg_slave_stretch_int_raw</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_RAW</name>
              <description>reg_general_call_int_raw</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>I2C_INT_CLR_REG</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_CLR</name>
              <description>reg_rxfifo_wm_int_clr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_CLR</name>
              <description>reg_txfifo_wm_int_clr</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_CLR</name>
              <description>reg_rxfifo_ovf_int_clr</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_CLR</name>
              <description>reg_end_detect_int_clr</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_CLR</name>
              <description>reg_byte_trans_done_int_clr</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_CLR</name>
              <description>reg_arbitration_lost_int_clr</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_CLR</name>
              <description>reg_mst_txfifo_udf_int_clr</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_CLR</name>
              <description>reg_trans_complete_int_clr</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_CLR</name>
              <description>reg_time_out_int_clr</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_CLR</name>
              <description>reg_trans_start_int_clr</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NACK_INT_CLR</name>
              <description>reg_nack_int_clr</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_CLR</name>
              <description>reg_txfifo_ovf_int_clr</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_CLR</name>
              <description>reg_rxfifo_udf_int_clr</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_CLR</name>
              <description>reg_scl_st_to_int_clr</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_CLR</name>
              <description>reg_scl_main_st_to_int_clr</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DET_START_INT_CLR</name>
              <description>reg_det_start_int_clr</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_CLR</name>
              <description>reg_slave_stretch_int_clr</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_CLR</name>
              <description>reg_general_call_int_clr</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>I2C_INT_ENA_REG</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_ENA</name>
              <description>reg_rxfifo_wm_int_ena</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_ENA</name>
              <description>reg_txfifo_wm_int_ena</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ENA</name>
              <description>reg_rxfifo_ovf_int_ena</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>END_DETECT_INT_ENA</name>
              <description>reg_end_detect_int_ena</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_ENA</name>
              <description>reg_byte_trans_done_int_ena</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ENA</name>
              <description>reg_arbitration_lost_int_ena</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_ENA</name>
              <description>reg_mst_txfifo_udf_int_ena</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ENA</name>
              <description>reg_trans_complete_int_ena</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ENA</name>
              <description>reg_time_out_int_ena</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_INT_ENA</name>
              <description>reg_trans_start_int_ena</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACK_INT_ENA</name>
              <description>reg_nack_int_ena</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_ENA</name>
              <description>reg_txfifo_ovf_int_ena</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_ENA</name>
              <description>reg_rxfifo_udf_int_ena</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_ENA</name>
              <description>reg_scl_st_to_int_ena</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_ENA</name>
              <description>reg_scl_main_st_to_int_ena</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DET_START_INT_ENA</name>
              <description>reg_det_start_int_ena</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_ENA</name>
              <description>reg_slave_stretch_int_ena</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_ENA</name>
              <description>reg_general_call_int_ena</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STATUS</name>
          <description>I2C_INT_STATUS_REG</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_ST</name>
              <description>reg_rxfifo_wm_int_st</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_ST</name>
              <description>reg_txfifo_wm_int_st</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ST</name>
              <description>reg_rxfifo_ovf_int_st</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_ST</name>
              <description>reg_end_detect_int_st</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_ST</name>
              <description>reg_byte_trans_done_int_st</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ST</name>
              <description>reg_arbitration_lost_int_st</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_ST</name>
              <description>reg_mst_txfifo_udf_int_st</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ST</name>
              <description>reg_trans_complete_int_st</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ST</name>
              <description>reg_time_out_int_st</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_ST</name>
              <description>reg_trans_start_int_st</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACK_INT_ST</name>
              <description>reg_nack_int_st</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_ST</name>
              <description>reg_txfifo_ovf_int_st</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_ST</name>
              <description>reg_rxfifo_udf_int_st</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_ST</name>
              <description>reg_scl_st_to_int_st</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_ST</name>
              <description>reg_scl_main_st_to_int_st</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DET_START_INT_ST</name>
              <description>reg_det_start_int_st</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_ST</name>
              <description>reg_slave_stretch_int_st</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_ST</name>
              <description>reg_general_call_int_st</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_HOLD</name>
          <description>I2C_SDA_HOLD_REG</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>reg_sda_hold_time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_SAMPLE</name>
          <description>I2C_SDA_SAMPLE_REG</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>reg_sda_sample_time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_HIGH_PERIOD</name>
          <description>I2C_SCL_HIGH_PERIOD_REG</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCL_HIGH_PERIOD</name>
              <description>reg_scl_high_period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_WAIT_HIGH_PERIOD</name>
              <description>reg_scl_wait_high_period</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_START_HOLD</name>
          <description>I2C_SCL_START_HOLD_REG</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>reg_scl_start_hold_time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_RSTART_SETUP</name>
          <description>I2C_SCL_RSTART_SETUP_REG</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>reg_scl_rstart_setup_time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_HOLD</name>
          <description>I2C_SCL_STOP_HOLD_REG</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>reg_scl_stop_hold_time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_SETUP</name>
          <description>I2C_SCL_STOP_SETUP_REG</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>reg_scl_stop_setup_time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CFG</name>
          <description>I2C_FILTER_CFG_REG</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000300</resetValue>
          <fields>
            <field>
              <name>SCL_FILTER_THRES</name>
              <description>reg_scl_filter_thres</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_FILTER_THRES</name>
              <description>reg_sda_filter_thres</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FILTER_EN</name>
              <description>reg_scl_filter_en</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_FILTER_EN</name>
              <description>reg_sda_filter_en</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_CONF</name>
          <description>I2C_CLK_CONF_REG</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00200000</resetValue>
          <fields>
            <field>
              <name>SCLK_DIV_NUM</name>
              <description>reg_sclk_div_num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_A</name>
              <description>reg_sclk_div_a</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_B</name>
              <description>reg_sclk_div_b</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>reg_sclk_sel</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_ACTIVE</name>
              <description>reg_sclk_active</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-7</dimIndex>
          <name>COMD%s</name>
          <description>I2C_COMD%s_REG</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMMAND</name>
              <description>reg_command</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND_DONE</name>
              <description>reg_command_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_ST_TIME_OUT</name>
          <description>I2C_SCL_ST_TIME_OUT_REG</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SCL_ST_TO_I2C</name>
              <description>reg_scl_st_to_regno more than 23</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_MAIN_ST_TIME_OUT</name>
          <description>I2C_SCL_MAIN_ST_TIME_OUT_REG</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SCL_MAIN_ST_TO_I2C</name>
              <description>reg_scl_main_st_to_regno more than 23</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_SP_CONF</name>
          <description>I2C_SCL_SP_CONF_REG</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCL_RST_SLV_EN</name>
              <description>reg_scl_rst_slv_en</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_RST_SLV_NUM</name>
              <description>reg_scl_rst_slv_num</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_PD_EN</name>
              <description>reg_scl_pd_en</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_PD_EN</name>
              <description>reg_sda_pd_en</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STRETCH_CONF</name>
          <description>I2C_SCL_STRETCH_CONF_REG</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STRETCH_PROTECT_NUM</name>
              <description>reg_stretch_protect_num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_SCL_STRETCH_EN</name>
              <description>reg_slave_scl_stretch_en</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_SCL_STRETCH_CLR</name>
              <description>reg_slave_scl_stretch_clr</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLAVE_BYTE_ACK_CTL_EN</name>
              <description>reg_slave_byte_ack_ctl_en</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_BYTE_ACK_LVL</name>
              <description>reg_slave_byte_ack_lvl</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>I2C_DATE_REG</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <resetValue>0x20070201</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>reg_date</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFIFO_START_ADDR</name>
          <description>I2C_TXFIFO_START_ADDR_REG</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TXFIFO_START_ADDR</name>
              <description>reg_txfifo_start_addr.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFIFO_START_ADDR</name>
          <description>I2C_RXFIFO_START_ADDR_REG</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_START_ADDR</name>
              <description>reg_rxfifo_start_addr.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S</name>
      <description>I2S (Inter-IC Sound) Controller</description>
      <groupName>I2S</groupName>
      <baseAddress>0x6002D000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x5C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2S</name>
        <value>20</value>
      </interrupt>
      <registers>
        <register>
          <name>INT_RAW</name>
          <description>I2S interrupt raw register, valid in level.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>I2S interrupt status register.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>I2S interrupt enable register.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>I2S interrupt clear register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CONF</name>
          <description>I2S RX configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00009600</resetValue>
          <fields>
            <field>
              <name>RX_RESET</name>
              <description>Set this bit to reset receiver</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_FIFO_RESET</name>
              <description>Set this bit to reset Rx AFIFO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_START</name>
              <description>Set this bit to start receiving data</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SLAVE_MOD</name>
              <description>Set this bit to enable slave receiver mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MONO</name>
              <description>Set this bit to enable receiver  in mono mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIG_ENDIAN</name>
              <description>I2S Rx byte endian, 1: low addr value to high addr. 0: low addr with low addr value.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_UPDATE</name>
              <description>Set 1 to update I2S RX registers from APB clock domain to I2S RX clock domain. This bit will be cleared by hardware after update register done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MONO_FST_VLD</name>
              <description>1: The first channel data value is valid in I2S RX mono mode.   0: The second channel data value is valid in I2S RX mono mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PCM_CONF</name>
              <description>I2S RX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PCM_BYPASS</name>
              <description>Set this bit to bypass Compress/Decompress module for received data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_STOP_MODE</name>
              <description>0  : I2S Rx only stop when reg_rx_start is cleared.   1: Stop when reg_rx_start is 0 or in_suc_eof is 1.   2:  Stop I2S RX when reg_rx_start is 0 or RX FIFO is full.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LEFT_ALIGN</name>
              <description>1: I2S RX left alignment mode. 0: I2S RX right alignment mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_24_FILL_EN</name>
              <description>1: store 24 channel bits to 32 bits. 0:store 24 channel bits to 24 bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_IDLE_POL</name>
              <description>0: WS should be 0 when receiving left channel data, and WS is 1in right channel.  1: WS should be 1 when receiving left channel data, and WS is 0in right channel.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIT_ORDER</name>
              <description>I2S Rx bit endian. 1:small endian, the LSB is received first. 0:big endian, the MSB is received first.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_EN</name>
              <description>1: Enable I2S TDM Rx mode . 0: Disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PDM_EN</name>
              <description>1: Enable I2S PDM Rx mode . 0: Disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CONF</name>
          <description>I2S TX configure register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000B200</resetValue>
          <fields>
            <field>
              <name>TX_RESET</name>
              <description>Set this bit to reset transmitter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_FIFO_RESET</name>
              <description>Set this bit to reset Tx AFIFO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_START</name>
              <description>Set this bit to start transmitting data</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SLAVE_MOD</name>
              <description>Set this bit to enable slave transmitter mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MONO</name>
              <description>Set this bit to enable transmitter in mono mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHAN_EQUAL</name>
              <description>1: The value of Left channel data is equal to the value of right channel data in I2S TX mono mode or TDM channel select mode. 0: The invalid channel data is reg_i2s_single_data in I2S TX mono mode or TDM channel select mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIG_ENDIAN</name>
              <description>I2S Tx byte endian, 1: low addr value to high addr.  0: low addr with low addr value.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_UPDATE</name>
              <description>Set 1 to update I2S TX registers from APB clock domain to I2S TX clock domain. This bit will be cleared by hardware after update register done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MONO_FST_VLD</name>
              <description>1: The first channel data value is valid in I2S TX mono mode.   0: The second channel data value is valid in I2S TX mono mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PCM_CONF</name>
              <description>I2S TX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PCM_BYPASS</name>
              <description>Set this bit to bypass  Compress/Decompress module for transmitted data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_STOP_EN</name>
              <description>Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LEFT_ALIGN</name>
              <description>1: I2S TX left alignment mode. 0: I2S TX right alignment mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_24_FILL_EN</name>
              <description>1: Sent 32 bits in 24 channel bits mode. 0: Sent 24 bits in 24 channel bits mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_IDLE_POL</name>
              <description>0: WS should be 0 when sending left channel data, and WS is 1in right channel.  1: WS should be 1 when sending left channel data, and WS is 0in right channel.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIT_ORDER</name>
              <description>I2S Tx bit endian. 1:small endian, the LSB is sent first. 0:big endian, the MSB is sent first.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_EN</name>
              <description>1: Enable I2S TDM Tx mode . 0: Disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_EN</name>
              <description>1: Enable I2S PDM Tx mode . 0: Disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHAN_MOD</name>
              <description>I2S transmitter channel mode configuration bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG_LOOPBACK</name>
              <description>Enable signal loop back mode with transmitter module and receiver module sharing the same WS and BCK signals.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CONF1</name>
          <description>I2S RX configure register 1</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x2F3DE300</resetValue>
          <fields>
            <field>
              <name>RX_TDM_WS_WIDTH</name>
              <description>The width of rx_ws_out in TDM mode is (I2S_RX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in receiver mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BITS_MOD</name>
              <description>Set the bits to configure the valid data bit length of I2S receiver channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HALF_SAMPLE_BITS</name>
              <description>I2S Rx half sample bits -1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN_BITS</name>
              <description>The Rx bit number for each channel minus 1in TDM mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSB_SHIFT</name>
              <description>Set this bit to enable receiver in Phillips standard mode</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CONF1</name>
          <description>I2S TX configure register 1</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x6F3DE300</resetValue>
          <fields>
            <field>
              <name>TX_TDM_WS_WIDTH</name>
              <description>The width of tx_ws_out in TDM mode is (I2S_TX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in transmitter mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BITS_MOD</name>
              <description>Set the bits to configure the valid data bit length of I2S transmitter channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HALF_SAMPLE_BITS</name>
              <description>I2S Tx half sample bits -1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN_BITS</name>
              <description>The Tx bit number for each channel minus 1in TDM mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSB_SHIFT</name>
              <description>Set this bit to enable transmitter in Phillips standard mode</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_NO_DLY</name>
              <description>1: BCK is not delayed to generate pos/neg edge in master mode. 0: BCK is delayed to generate pos/neg edge in master mode.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CLKM_CONF</name>
          <description>I2S RX clock configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RX_CLKM_DIV_NUM</name>
              <description>Integral I2S clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLK_ACTIVE</name>
              <description>I2S Rx module clock enable signal.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLK_SEL</name>
              <description>Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCLK_SEL</name>
              <description>0: UseI2S Tx module clock as I2S_MCLK_OUT.  1: UseI2S Rx module clock as I2S_MCLK_OUT.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CLKM_CONF</name>
          <description>I2S TX clock configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>TX_CLKM_DIV_NUM</name>
              <description>Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b &lt;= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b > a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLK_ACTIVE</name>
              <description>I2S Tx module clock enable signal.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLK_SEL</name>
              <description>Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Set this bit to enable clk gate</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CLKM_DIV_CONF</name>
          <description>I2S RX module clock divider configure register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000200</resetValue>
          <fields>
            <field>
              <name>RX_CLKM_DIV_Z</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLKM_DIV_Y</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b)).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLKM_DIV_X</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLKM_DIV_YN1</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CLKM_DIV_CONF</name>
          <description>I2S TX module clock divider configure register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000200</resetValue>
          <fields>
            <field>
              <name>TX_CLKM_DIV_Z</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLKM_DIV_Y</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b)).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLKM_DIV_X</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLKM_DIV_YN1</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_PCM2PDM_CONF</name>
          <description>I2S TX PCM2PDM configuration register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x004AA004</resetValue>
          <fields>
            <field>
              <name>TX_PDM_HP_BYPASS</name>
              <description>I2S TX PDM bypass hp filter or not. The option has been removed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SINC_OSR2</name>
              <description>I2S TX PDM OSR2 value</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_PRESCALE</name>
              <description>I2S TX PDM prescale for sigmadelta</description>
              <bitOffset>5</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_HP_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_LP_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>15</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SINC_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SIGMADELTA_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SIGMADELTA_DITHER2</name>
              <description>I2S TX PDM sigmadelta dither2 value</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SIGMADELTA_DITHER</name>
              <description>I2S TX PDM sigmadelta dither value</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_DAC_2OUT_EN</name>
              <description>I2S TX PDM dac mode enable</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_DAC_MODE_EN</name>
              <description>I2S TX PDM dac 2channel enable</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCM2PDM_CONV_EN</name>
              <description>I2S TX PDM Converter enable</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_PCM2PDM_CONF1</name>
          <description>I2S TX PCM2PDM configuration register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x03F783C0</resetValue>
          <fields>
            <field>
              <name>TX_PDM_FP</name>
              <description>I2S TX PDM Fp</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_FS</name>
              <description>I2S TX PDM Fs</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_IIR_HP_MULT12_5</name>
              <description>The fourth parameter of PDM TX IIR_HP filter stage 2 is (504 + I2S_TX_IIR_HP_MULT12_5[2:0])</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_IIR_HP_MULT12_0</name>
              <description>The fourth parameter of PDM TX IIR_HP filter stage 1 is (504 + I2S_TX_IIR_HP_MULT12_0[2:0])</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_TDM_CTRL</name>
          <description>I2S TX TDM mode control register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>RX_TDM_PDM_CHAN0_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 0. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN1_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 1. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN2_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 2. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN3_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 3. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN4_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 4. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN5_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 5. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN6_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 6. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN7_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 7. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN8_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 8. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN9_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 9. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN10_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 10. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN11_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 11. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN12_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 12. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN13_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 13. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN14_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 14. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN15_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 15. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_TOT_CHAN_NUM</name>
              <description>The total channel number of I2S TX TDM mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_TDM_CTRL</name>
          <description>I2S TX TDM mode control register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>TX_TDM_CHAN0_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 0. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN1_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 1. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN2_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 2. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN3_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 3. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN4_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 4. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN5_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 5. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN6_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 6. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN7_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 7. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN8_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 8. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN9_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 9. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN10_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 10. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN11_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 11. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN12_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 12. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN13_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 13. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN14_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 14. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN15_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 15. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_TOT_CHAN_NUM</name>
              <description>The total channel number of I2S TX TDM mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_SKIP_MSK_EN</name>
              <description>When DMA TX buffer stores the data of (REG_TX_TDM_TOT_CHAN_NUM + 1)  channels, and only the data of the enabled channels is sent, then this bit should be set. Clear it when all the data stored in DMA TX buffer is for enabled channels.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_TIMING</name>
          <description>I2S RX timing control register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_SD_IN_DM</name>
              <description>The delay mode of I2S Rx SD input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_OUT_DM</name>
              <description>The delay mode of I2S Rx WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_OUT_DM</name>
              <description>The delay mode of I2S Rx BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_IN_DM</name>
              <description>The delay mode of I2S Rx WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_IN_DM</name>
              <description>The delay mode of I2S Rx BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_TIMING</name>
          <description>I2S TX timing control register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_SD_OUT_DM</name>
              <description>The delay mode of I2S TX SD output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SD1_OUT_DM</name>
              <description>The delay mode of I2S TX SD1 output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_OUT_DM</name>
              <description>The delay mode of I2S TX WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_OUT_DM</name>
              <description>The delay mode of I2S TX BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_IN_DM</name>
              <description>The delay mode of I2S TX WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_IN_DM</name>
              <description>The delay mode of I2S TX BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_HUNG_CONF</name>
          <description>I2S HUNG configure register.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000810</resetValue>
          <fields>
            <field>
              <name>LC_FIFO_TIMEOUT</name>
              <description>the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LC_FIFO_TIMEOUT_SHIFT</name>
              <description>The bits are used to scale tick counter threshold. The tick counter is reset when counter value >= 88000/2^i2s_lc_fifo_timeout_shift</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LC_FIFO_TIMEOUT_ENA</name>
              <description>The enable bit for FIFO timeout</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXEOF_NUM</name>
          <description>I2S RX data number control register.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000040</resetValue>
          <fields>
            <field>
              <name>RX_EOF_NUM</name>
              <description>The receive data bit length is (I2S_RX_BITS_MOD[4:0] + 1) * (REG_RX_EOF_NUM[11:0] + 1) . It will trigger in_suc_eof interrupt in the configured DMA RX channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF_SIGLE_DATA</name>
          <description>I2S signal data register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SINGLE_DATA</name>
              <description>The configured constant channel data to be sent out.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>I2S TX status register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>TX_IDLE</name>
              <description>1: i2s_tx is idle state. 0: i2s_tx is working.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x02007220</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>I2S version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>INTERRUPT_CORE0</name>
      <description>Interrupt Core</description>
      <groupName>INTERRUPT_CORE0</groupName>
      <baseAddress>0x600C2000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x19C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>WIFI_MAC</name>
        <value>0</value>
      </interrupt>
      <interrupt>
        <name>WIFI_MAC_NMI</name>
        <value>1</value>
      </interrupt>
      <interrupt>
        <name>WIFI_PWR</name>
        <value>2</value>
      </interrupt>
      <interrupt>
        <name>WIFI_BB</name>
        <value>3</value>
      </interrupt>
      <interrupt>
        <name>BT_MAC</name>
        <value>4</value>
      </interrupt>
      <interrupt>
        <name>BT_BB</name>
        <value>5</value>
      </interrupt>
      <interrupt>
        <name>BT_BB_NMI</name>
        <value>6</value>
      </interrupt>
      <interrupt>
        <name>RWBT</name>
        <value>7</value>
      </interrupt>
      <interrupt>
        <name>RWBLE</name>
        <value>8</value>
      </interrupt>
      <interrupt>
        <name>RWBT_NMI</name>
        <value>9</value>
      </interrupt>
      <interrupt>
        <name>RWBLE_NMI</name>
        <value>10</value>
      </interrupt>
      <interrupt>
        <name>SW_INTR_0</name>
        <value>50</value>
      </interrupt>
      <interrupt>
        <name>SW_INTR_1</name>
        <value>51</value>
      </interrupt>
      <interrupt>
        <name>SW_INTR_2</name>
        <value>52</value>
      </interrupt>
      <interrupt>
        <name>SW_INTR_3</name>
        <value>53</value>
      </interrupt>
      <registers>
        <register>
          <name>MAC_INTR_MAP</name>
          <description>mac intr map register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_INTR_MAP</name>
              <description>core0_mac_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MAC_NMI_MAP</name>
          <description>mac nmi_intr map register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_NMI_MAP</name>
              <description>reg_core0_mac_nmi_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_INTR_MAP</name>
          <description>pwr intr map register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PWR_INTR_MAP</name>
              <description>reg_core0_pwr_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BB_INT_MAP</name>
          <description>bb intr map register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BB_INT_MAP</name>
              <description>reg_core0_bb_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_MAC_INT_MAP</name>
          <description>bt intr map register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BT_MAC_INT_MAP</name>
              <description>reg_core0_bt_mac_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BB_INT_MAP</name>
          <description>bb_bt intr map register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BT_BB_INT_MAP</name>
              <description>reg_core0_bt_bb_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BB_NMI_MAP</name>
          <description>bb_bt_nmi intr map register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BT_BB_NMI_MAP</name>
              <description>reg_core0_bt_bb_nmi_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBT_IRQ_MAP</name>
          <description>rwbt intr map register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RWBT_IRQ_MAP</name>
              <description>reg_core0_rwbt_irq_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBLE_IRQ_MAP</name>
          <description>rwble intr map register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RWBLE_IRQ_MAP</name>
              <description>reg_core0_rwble_irq_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBT_NMI_MAP</name>
          <description>rwbt_nmi intr map register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RWBT_NMI_MAP</name>
              <description>reg_core0_rwbt_nmi_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBLE_NMI_MAP</name>
          <description>rwble_nmi intr map register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RWBLE_NMI_MAP</name>
              <description>reg_core0_rwble_nmi_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_MST_INT_MAP</name>
          <description>i2c intr map register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_MST_INT_MAP</name>
              <description>reg_core0_i2c_mst_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLC0_INTR_MAP</name>
          <description>slc0 intr map register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLC0_INTR_MAP</name>
              <description>reg_core0_slc0_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLC1_INTR_MAP</name>
          <description>slc1 intr map register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLC1_INTR_MAP</name>
              <description>reg_core0_slc1_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_CTRL_INTR_MAP</name>
          <description>apb_ctrl intr map register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_CTRL_INTR_MAP</name>
              <description>reg_core0_apb_ctrl_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UHCI0_INTR_MAP</name>
          <description>uchi0 intr map register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UHCI0_INTR_MAP</name>
              <description>reg_core0_uhci0_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_PRO_MAP</name>
          <description>gpio intr map register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_PRO_MAP</name>
              <description>reg_core0_gpio_interrupt_pro_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
          <description>gpio_pro intr map register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
              <description>reg_core0_gpio_interrupt_pro_nmi_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_1_MAP</name>
          <description>gpio_pro_nmi intr map register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_INTR_1_MAP</name>
              <description>reg_core0_spi_intr_1_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_2_MAP</name>
          <description>spi1 intr map register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_INTR_2_MAP</name>
              <description>reg_core0_spi_intr_2_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S1_INT_MAP</name>
          <description>spi2 intr map register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S1_INT_MAP</name>
              <description>reg_core0_i2s1_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_INTR_MAP</name>
          <description>i2s1 intr map register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UART_INTR_MAP</name>
              <description>reg_core0_uart_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART1_INTR_MAP</name>
          <description>uart1 intr map register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UART1_INTR_MAP</name>
              <description>reg_core0_uart1_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_INT_MAP</name>
          <description>ledc intr map register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LEDC_INT_MAP</name>
              <description>reg_core0_ledc_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EFUSE_INT_MAP</name>
          <description>efuse intr map register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EFUSE_INT_MAP</name>
              <description>reg_core0_efuse_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_INT_MAP</name>
          <description>can intr map register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAN_INT_MAP</name>
              <description>reg_core0_can_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_INTR_MAP</name>
          <description>usb intr map register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USB_INTR_MAP</name>
              <description>reg_core0_usb_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CORE_INTR_MAP</name>
          <description>rtc intr map register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_CORE_INTR_MAP</name>
              <description>reg_core0_rtc_core_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RMT_INTR_MAP</name>
          <description>rmt intr map register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RMT_INTR_MAP</name>
              <description>reg_core0_rmt_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_EXT0_INTR_MAP</name>
          <description>i2c intr map register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_EXT0_INTR_MAP</name>
              <description>reg_core0_i2c_ext0_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_INT1_MAP</name>
          <description>timer1 intr map register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_INT1_MAP</name>
              <description>reg_core0_timer_int1_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_INT2_MAP</name>
          <description>timer2 intr map register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_INT2_MAP</name>
              <description>reg_core0_timer_int2_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_T0_INT_MAP</name>
          <description>tg to intr map register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TG_T0_INT_MAP</name>
              <description>reg_core0_tg_t0_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_WDT_INT_MAP</name>
          <description>tg wdt intr map register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TG_WDT_INT_MAP</name>
              <description>reg_core0_tg_wdt_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_T0_INT_MAP</name>
          <description>tg1 to intr map register</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TG1_T0_INT_MAP</name>
              <description>reg_core0_tg1_t0_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_WDT_INT_MAP</name>
          <description>tg1 wdt intr map register</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TG1_WDT_INT_MAP</name>
              <description>reg_core0_tg1_wdt_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_IA_INT_MAP</name>
          <description>cache ia intr map register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_IA_INT_MAP</name>
              <description>reg_core0_cache_ia_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET0_INT_MAP</name>
          <description>systimer intr map register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYSTIMER_TARGET0_INT_MAP</name>
              <description>reg_core0_systimer_target0_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET1_INT_MAP</name>
          <description>systimer target1 intr map register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYSTIMER_TARGET1_INT_MAP</name>
              <description>reg_core0_systimer_target1_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET2_INT_MAP</name>
          <description>systimer target2 intr map register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYSTIMER_TARGET2_INT_MAP</name>
              <description>reg_core0_systimer_target2_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_REJECT_INTR_MAP</name>
          <description>spi mem reject intr map register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_INTR_MAP</name>
              <description>reg_core0_spi_mem_reject_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_INT_MAP</name>
          <description>icache perload intr map register</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_INT_MAP</name>
              <description>reg_core0_icache_preload_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_INT_MAP</name>
          <description>icache sync intr map register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_INT_MAP</name>
              <description>reg_core0_icache_sync_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_ADC_INT_MAP</name>
          <description>adc intr map register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_ADC_INT_MAP</name>
              <description>reg_core0_apb_adc_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CH0_INT_MAP</name>
          <description>dma ch0 intr map register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_CH0_INT_MAP</name>
              <description>reg_core0_dma_ch0_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CH1_INT_MAP</name>
          <description>dma ch1 intr map register</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_CH1_INT_MAP</name>
              <description>reg_core0_dma_ch1_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CH2_INT_MAP</name>
          <description>dma ch2 intr map register</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_CH2_INT_MAP</name>
              <description>reg_core0_dma_ch2_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSA_INT_MAP</name>
          <description>rsa intr map register</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RSA_INT_MAP</name>
              <description>reg_core0_rsa_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_INT_MAP</name>
          <description>aes intr map register</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AES_INT_MAP</name>
              <description>reg_core0_aes_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHA_INT_MAP</name>
          <description>sha intr map register</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SHA_INT_MAP</name>
              <description>reg_core0_sha_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_0_MAP</name>
          <description>cpu from cpu 0 intr map register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_0_MAP</name>
              <description>reg_core0_cpu_intr_from_cpu_0_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_1_MAP</name>
          <description>cpu from cpu 0 intr map register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_1_MAP</name>
              <description>reg_core0_cpu_intr_from_cpu_1_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_2_MAP</name>
          <description>cpu from cpu 1 intr map register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_2_MAP</name>
              <description>reg_core0_cpu_intr_from_cpu_2_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_3_MAP</name>
          <description>cpu from cpu 3 intr map register</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_3_MAP</name>
              <description>reg_core0_cpu_intr_from_cpu_3_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASSIST_DEBUG_INTR_MAP</name>
          <description>assist debug intr map register</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ASSIST_DEBUG_INTR_MAP</name>
              <description>reg_core0_assist_debug_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>dma pms violatile intr map register</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>reg_core0_dma_apbperi_pms_monitor_violate_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>iram0 pms violatile intr map register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>reg_core0_core_0_iram0_pms_monitor_violate_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>mac intr map register</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>reg_core0_core_0_dram0_pms_monitor_violate_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>mac intr map register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>reg_core0_core_0_pif_pms_monitor_violate_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
          <description>mac intr map register</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
              <description>reg_core0_core_0_pif_pms_monitor_violate_size_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
          <description>mac intr map register</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
              <description>reg_core0_backup_pms_violate_intr_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CORE0_ACS_INT_MAP</name>
          <description>mac intr map register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_CORE0_ACS_INT_MAP</name>
              <description>reg_core0_cache_core0_acs_int_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_STATUS_REG_0</name>
          <description>mac intr map register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_0</name>
              <description>reg_core0_intr_status_0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_STATUS_REG_1</name>
          <description>mac intr map register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_1</name>
              <description>reg_core0_intr_status_1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>mac intr map register</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>REG_CLK_EN</name>
              <description>reg_core0_reg_clk_en</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_ENABLE</name>
          <description>mac intr map register</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INT_ENABLE</name>
              <description>reg_core0_cpu_int_enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_TYPE</name>
          <description>mac intr map register</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INT_TYPE</name>
              <description>reg_core0_cpu_int_type</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_CLEAR</name>
          <description>mac intr map register</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INT_CLEAR</name>
              <description>reg_core0_cpu_int_clear</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_EIP_STATUS</name>
          <description>mac intr map register</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INT_EIP_STATUS</name>
              <description>reg_core0_cpu_int_eip_status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_0</name>
          <description>mac intr map register</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_0_MAP</name>
              <description>reg_core0_cpu_pri_0_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_1</name>
          <description>mac intr map register</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_1_MAP</name>
              <description>reg_core0_cpu_pri_1_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_2</name>
          <description>mac intr map register</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_2_MAP</name>
              <description>reg_core0_cpu_pri_2_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_3</name>
          <description>mac intr map register</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_3_MAP</name>
              <description>reg_core0_cpu_pri_3_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_4</name>
          <description>mac intr map register</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_4_MAP</name>
              <description>reg_core0_cpu_pri_4_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_5</name>
          <description>mac intr map register</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_5_MAP</name>
              <description>reg_core0_cpu_pri_5_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_6</name>
          <description>mac intr map register</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_6_MAP</name>
              <description>reg_core0_cpu_pri_6_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_7</name>
          <description>mac intr map register</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_7_MAP</name>
              <description>reg_core0_cpu_pri_7_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_8</name>
          <description>mac intr map register</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_8_MAP</name>
              <description>reg_core0_cpu_pri_8_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_9</name>
          <description>mac intr map register</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_9_MAP</name>
              <description>reg_core0_cpu_pri_9_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_10</name>
          <description>mac intr map register</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_10_MAP</name>
              <description>reg_core0_cpu_pri_10_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_11</name>
          <description>mac intr map register</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_11_MAP</name>
              <description>reg_core0_cpu_pri_11_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_12</name>
          <description>mac intr map register</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_12_MAP</name>
              <description>reg_core0_cpu_pri_12_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_13</name>
          <description>mac intr map register</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_13_MAP</name>
              <description>reg_core0_cpu_pri_13_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_14</name>
          <description>mac intr map register</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_14_MAP</name>
              <description>reg_core0_cpu_pri_14_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_15</name>
          <description>mac intr map register</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_15_MAP</name>
              <description>reg_core0_cpu_pri_15_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_16</name>
          <description>mac intr map register</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_16_MAP</name>
              <description>reg_core0_cpu_pri_16_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_17</name>
          <description>mac intr map register</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_17_MAP</name>
              <description>reg_core0_cpu_pri_17_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_18</name>
          <description>mac intr map register</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_18_MAP</name>
              <description>reg_core0_cpu_pri_18_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_19</name>
          <description>mac intr map register</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_19_MAP</name>
              <description>reg_core0_cpu_pri_19_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_20</name>
          <description>mac intr map register</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_20_MAP</name>
              <description>reg_core0_cpu_pri_20_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_21</name>
          <description>mac intr map register</description>
          <addressOffset>0x168</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_21_MAP</name>
              <description>reg_core0_cpu_pri_21_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_22</name>
          <description>mac intr map register</description>
          <addressOffset>0x16C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_22_MAP</name>
              <description>reg_core0_cpu_pri_22_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_23</name>
          <description>mac intr map register</description>
          <addressOffset>0x170</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_23_MAP</name>
              <description>reg_core0_cpu_pri_23_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_24</name>
          <description>mac intr map register</description>
          <addressOffset>0x174</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_24_MAP</name>
              <description>reg_core0_cpu_pri_24_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_25</name>
          <description>mac intr map register</description>
          <addressOffset>0x178</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_25_MAP</name>
              <description>reg_core0_cpu_pri_25_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_26</name>
          <description>mac intr map register</description>
          <addressOffset>0x17C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_26_MAP</name>
              <description>reg_core0_cpu_pri_26_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_27</name>
          <description>mac intr map register</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_27_MAP</name>
              <description>reg_core0_cpu_pri_27_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_28</name>
          <description>mac intr map register</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_28_MAP</name>
              <description>reg_core0_cpu_pri_28_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_29</name>
          <description>mac intr map register</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_29_MAP</name>
              <description>reg_core0_cpu_pri_29_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_30</name>
          <description>mac intr map register</description>
          <addressOffset>0x18C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_30_MAP</name>
              <description>reg_core0_cpu_pri_30_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_PRI_31</name>
          <description>mac intr map register</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_PRI_31_MAP</name>
              <description>reg_core0_cpu_pri_31_map</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INT_THRESH</name>
          <description>mac intr map register</description>
          <addressOffset>0x194</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INT_THRESH</name>
              <description>reg_core0_cpu_int_thresh</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_REG_DATE</name>
          <description>mac intr map register</description>
          <addressOffset>0x7FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02007210</resetValue>
          <fields>
            <field>
              <name>INTERRUPT_REG_DATE</name>
              <description>reg_core0_interrupt_reg_date</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IO_MUX</name>
      <description>Input/Output Multiplexer</description>
      <groupName>IO_MUX</groupName>
      <baseAddress>0x60009000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x60</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PIN_CTRL</name>
          <description>Clock Output Configuration Register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x000007FF</resetValue>
          <fields>
            <field>
              <name>CLK_OUT1</name>
              <description>If you want to output clock for I2S to CLK_OUT_out1, set this register to 0x0. CLK_OUT_out1 can be found in peripheral output signals.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_OUT2</name>
              <description>If you want to output clock for I2S to CLK_OUT_out2, set this register to 0x0. CLK_OUT_out2 can be found in peripheral output signals.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_OUT3</name>
              <description>If you want to output clock for I2S to CLK_OUT_out3, set this register to 0x0. CLK_OUT_out3 can be found in peripheral output signals.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>22</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>GPIO%s</name>
          <description>IO MUX Configure Register for pad XTAL_32K_P</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000B00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>IO MUX Version Control Register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02006050</resetValue>
          <fields>
            <field>
              <name>REG_DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LEDC</name>
      <description>LED Control PWM (Pulse Width Modulation)</description>
      <groupName>LEDC</groupName>
      <baseAddress>0x60019000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xB0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LEDC</name>
        <value>23</value>
      </interrupt>
      <registers>
        <register>
          <dim>6</dim>
          <dimIncrement>0x14</dimIncrement>
          <dimIndex>0-5</dimIndex>
          <name>CH%s_CONF0</name>
          <description>LEDC_LSCH%s_CONF%s.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_SEL</name>
              <description>reg_timer_sel_lsch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG_OUT_EN</name>
              <description>reg_sig_out_en_lsch0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_LV</name>
              <description>reg_idle_lv_lsch0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARA_UP</name>
              <description>reg_para_up_lsch0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_NUM</name>
              <description>reg_ovf_num_lsch0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_EN</name>
              <description>reg_ovf_cnt_en_lsch0.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_RESET</name>
              <description>reg_ovf_cnt_reset_lsch0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>0x14</dimIncrement>
          <dimIndex>0-5</dimIndex>
          <name>CH%s_HPOINT</name>
          <description>LEDC_LSCH%s_HPOINT.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>HPOINT</name>
              <description>reg_hpoint_lsch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>0x14</dimIncrement>
          <dimIndex>0-5</dimIndex>
          <name>CH%s_DUTY</name>
          <description>LEDC_LSCH%s_DUTY.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DUTY</name>
              <description>reg_duty_lsch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>0x14</dimIncrement>
          <dimIndex>0-5</dimIndex>
          <name>CH%s_CONF1</name>
          <description>LEDC_LSCH%s_CONF1.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>DUTY_SCALE</name>
              <description>reg_duty_scale_lsch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CYCLE</name>
              <description>reg_duty_cycle_lsch0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_NUM</name>
              <description>reg_duty_num_lsch0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_INC</name>
              <description>reg_duty_inc_lsch0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_START</name>
              <description>reg_duty_start_lsch0.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>0x14</dimIncrement>
          <dimIndex>0-5</dimIndex>
          <name>CH%s_DUTY_R</name>
          <description>LEDC_LSCH%s_DUTY_R.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DUTY_R</name>
              <description>reg_duty_lsch0_r.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <dimIndex>0-3</dimIndex>
          <name>TIMER%s_CONF</name>
          <description>LEDC_LSTIMER%s_CONF.</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>DUTY_RES</name>
              <description>reg_lstimer0_duty_res.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV</name>
              <description>reg_clk_div_lstimer0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSE</name>
              <description>reg_lstimer0_pause.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST</name>
              <description>reg_lstimer0_rst.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TICK_SEL</name>
              <description>reg_tick_sel_lstimer0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARA_UP</name>
              <description>reg_lstimer0_para_up.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <dimIndex>0-3</dimIndex>
          <name>TIMER%s_VALUE</name>
          <description>LEDC_LSTIMER%s_VALUE.</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT</name>
              <description>reg_lstimer0_cnt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>LEDC_INT_RAW.</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LSTIMER0_OVF_INT_RAW</name>
              <description>reg_lstimer0_ovf_int_raw.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSTIMER1_OVF_INT_RAW</name>
              <description>reg_lstimer1_ovf_int_raw.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSTIMER2_OVF_INT_RAW</name>
              <description>reg_lstimer2_ovf_int_raw.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSTIMER3_OVF_INT_RAW</name>
              <description>reg_lstimer3_ovf_int_raw.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH0_INT_RAW</name>
              <description>reg_duty_chng_end_lsch0_int_raw.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH1_INT_RAW</name>
              <description>reg_duty_chng_end_lsch1_int_raw.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH2_INT_RAW</name>
              <description>reg_duty_chng_end_lsch2_int_raw.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH3_INT_RAW</name>
              <description>reg_duty_chng_end_lsch3_int_raw.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH4_INT_RAW</name>
              <description>reg_duty_chng_end_lsch4_int_raw.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH5_INT_RAW</name>
              <description>reg_duty_chng_end_lsch5_int_raw.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH0_INT_RAW</name>
              <description>reg_ovf_cnt_lsch0_int_raw.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH1_INT_RAW</name>
              <description>reg_ovf_cnt_lsch1_int_raw.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH2_INT_RAW</name>
              <description>reg_ovf_cnt_lsch2_int_raw.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH3_INT_RAW</name>
              <description>reg_ovf_cnt_lsch3_int_raw.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH4_INT_RAW</name>
              <description>reg_ovf_cnt_lsch4_int_raw.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH5_INT_RAW</name>
              <description>reg_ovf_cnt_lsch5_int_raw.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>LEDC_INT_ST.</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LSTIMER0_OVF_INT_ST</name>
              <description>reg_lstimer0_ovf_int_st.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSTIMER1_OVF_INT_ST</name>
              <description>reg_lstimer1_ovf_int_st.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSTIMER2_OVF_INT_ST</name>
              <description>reg_lstimer2_ovf_int_st.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSTIMER3_OVF_INT_ST</name>
              <description>reg_lstimer3_ovf_int_st.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH0_INT_ST</name>
              <description>reg_duty_chng_end_lsch0_int_st.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH1_INT_ST</name>
              <description>reg_duty_chng_end_lsch1_int_st.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH2_INT_ST</name>
              <description>reg_duty_chng_end_lsch2_int_st.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH3_INT_ST</name>
              <description>reg_duty_chng_end_lsch3_int_st.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH4_INT_ST</name>
              <description>reg_duty_chng_end_lsch4_int_st.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH5_INT_ST</name>
              <description>reg_duty_chng_end_lsch5_int_st.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH0_INT_ST</name>
              <description>reg_ovf_cnt_lsch0_int_st.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH1_INT_ST</name>
              <description>reg_ovf_cnt_lsch1_int_st.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH2_INT_ST</name>
              <description>reg_ovf_cnt_lsch2_int_st.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH3_INT_ST</name>
              <description>reg_ovf_cnt_lsch3_int_st.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH4_INT_ST</name>
              <description>reg_ovf_cnt_lsch4_int_st.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH5_INT_ST</name>
              <description>reg_ovf_cnt_lsch5_int_st.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>LEDC_INT_ENA.</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LSTIMER0_OVF_INT_ENA</name>
              <description>reg_lstimer0_ovf_int_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSTIMER1_OVF_INT_ENA</name>
              <description>reg_lstimer1_ovf_int_ena.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSTIMER2_OVF_INT_ENA</name>
              <description>reg_lstimer2_ovf_int_ena.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSTIMER3_OVF_INT_ENA</name>
              <description>reg_lstimer3_ovf_int_ena.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH0_INT_ENA</name>
              <description>reg_duty_chng_end_lsch0_int_ena.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH1_INT_ENA</name>
              <description>reg_duty_chng_end_lsch1_int_ena.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH2_INT_ENA</name>
              <description>reg_duty_chng_end_lsch2_int_ena.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH3_INT_ENA</name>
              <description>reg_duty_chng_end_lsch3_int_ena.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH4_INT_ENA</name>
              <description>reg_duty_chng_end_lsch4_int_ena.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH5_INT_ENA</name>
              <description>reg_duty_chng_end_lsch5_int_ena.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH0_INT_ENA</name>
              <description>reg_ovf_cnt_lsch0_int_ena.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH1_INT_ENA</name>
              <description>reg_ovf_cnt_lsch1_int_ena.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH2_INT_ENA</name>
              <description>reg_ovf_cnt_lsch2_int_ena.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH3_INT_ENA</name>
              <description>reg_ovf_cnt_lsch3_int_ena.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH4_INT_ENA</name>
              <description>reg_ovf_cnt_lsch4_int_ena.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH5_INT_ENA</name>
              <description>reg_ovf_cnt_lsch5_int_ena.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>LEDC_INT_CLR.</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LSTIMER0_OVF_INT_CLR</name>
              <description>reg_lstimer0_ovf_int_clr.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LSTIMER1_OVF_INT_CLR</name>
              <description>reg_lstimer1_ovf_int_clr.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LSTIMER2_OVF_INT_CLR</name>
              <description>reg_lstimer2_ovf_int_clr.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LSTIMER3_OVF_INT_CLR</name>
              <description>reg_lstimer3_ovf_int_clr.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH0_INT_CLR</name>
              <description>reg_duty_chng_end_lsch0_int_clr.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH1_INT_CLR</name>
              <description>reg_duty_chng_end_lsch1_int_clr.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH2_INT_CLR</name>
              <description>reg_duty_chng_end_lsch2_int_clr.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH3_INT_CLR</name>
              <description>reg_duty_chng_end_lsch3_int_clr.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH4_INT_CLR</name>
              <description>reg_duty_chng_end_lsch4_int_clr.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_LSCH5_INT_CLR</name>
              <description>reg_duty_chng_end_lsch5_int_clr.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH0_INT_CLR</name>
              <description>reg_ovf_cnt_lsch0_int_clr.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH1_INT_CLR</name>
              <description>reg_ovf_cnt_lsch1_int_clr.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH2_INT_CLR</name>
              <description>reg_ovf_cnt_lsch2_int_clr.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH3_INT_CLR</name>
              <description>reg_ovf_cnt_lsch3_int_clr.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH4_INT_CLR</name>
              <description>reg_ovf_cnt_lsch4_int_clr.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_LSCH5_INT_CLR</name>
              <description>reg_ovf_cnt_lsch5_int_clr.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF</name>
          <description>LEDC_CONF.</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_CLK_SEL</name>
              <description>reg_apb_clk_sel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>reg_clk_en.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>LEDC_DATE.</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x19061700</resetValue>
          <fields>
            <field>
              <name>LEDC_DATE</name>
              <description>reg_ledc_date.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RMT</name>
      <description>Remote Control Peripheral</description>
      <groupName>RMT</groupName>
      <baseAddress>0x60016000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x78</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RMT</name>
        <value>28</value>
      </interrupt>
      <registers>
        <register>
          <name>CH0DATA</name>
          <description>RMT_CH0DATA_REG.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1DATA</name>
          <description>RMT_CH1DATA_REG.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2DATA</name>
          <description>RMT_CH2DATA_REG.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3DATA</name>
          <description>RMT_CH3DATA_REG.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-1</dimIndex>
          <name>CH%s_TX_CONF0</name>
          <description>RMT_CH%sCONF%s_REG.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x00710200</resetValue>
          <fields>
            <field>
              <name>TX_START</name>
              <description>reg_tx_start_ch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MEM_RD_RST</name>
              <description>reg_mem_rd_rst_ch0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_MEM_RST</name>
              <description>reg_apb_mem_rst_ch0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_CONTI_MODE</name>
              <description>reg_tx_conti_mode_ch0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TX_WRAP_EN</name>
              <description>reg_mem_tx_wrap_en_ch0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_OUT_LV</name>
              <description>reg_idle_out_lv_ch0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_OUT_EN</name>
              <description>reg_idle_out_en_ch0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_STOP</name>
              <description>reg_tx_stop_ch0.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV_CNT</name>
              <description>reg_div_cnt_ch0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_SIZE</name>
              <description>reg_mem_size_ch0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_EFF_EN</name>
              <description>reg_carrier_eff_en_ch0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_EN</name>
              <description>reg_carrier_en_ch0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_OUT_LV</name>
              <description>reg_carrier_out_lv_ch0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFIFO_RST</name>
              <description>reg_afifo_rst_ch0.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPDATE</name>
              <description>reg_reg_conf_update_ch0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x8</dimIncrement>
          <dimIndex>2-3</dimIndex>
          <name>CH%s_RX_CONF0</name>
          <description>RMT_CH2CONF0_REG.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x30FFFF02</resetValue>
          <fields>
            <field>
              <name>DIV_CNT</name>
              <description>reg_div_cnt_ch2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_THRES</name>
              <description>reg_idle_thres_ch2.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_SIZE</name>
              <description>reg_mem_size_ch2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_EN</name>
              <description>reg_carrier_en_ch2.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_OUT_LV</name>
              <description>reg_carrier_out_lv_ch2.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2CONF1</name>
          <description>RMT_CH2CONF1_REG.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000001E8</resetValue>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>reg_rx_en_ch2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_WR_RST</name>
              <description>reg_mem_wr_rst_ch2.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_MEM_RST</name>
              <description>reg_apb_mem_rst_ch2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MEM_OWNER</name>
              <description>reg_mem_owner_ch2.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_EN</name>
              <description>reg_rx_filter_en_ch2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_THRES</name>
              <description>reg_rx_filter_thres_ch2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_RX_WRAP_EN</name>
              <description>reg_mem_rx_wrap_en_ch2.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFIFO_RST</name>
              <description>reg_afifo_rst_ch2.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPDATE</name>
              <description>reg_conf_update_ch2.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3CONF1</name>
          <description>RMT_CH3CONF1_REG.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x000001E8</resetValue>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>reg_rx_en_ch3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_WR_RST</name>
              <description>reg_mem_wr_rst_ch3.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_MEM_RST</name>
              <description>reg_apb_mem_rst_ch3.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MEM_OWNER</name>
              <description>reg_mem_owner_ch3.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_EN</name>
              <description>reg_rx_filter_en_ch3.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_THRES</name>
              <description>reg_rx_filter_thres_ch3.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_RX_WRAP_EN</name>
              <description>reg_mem_rx_wrap_en_ch3.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFIFO_RST</name>
              <description>reg_afifo_rst_ch3.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPDATE</name>
              <description>reg_conf_update_ch3.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0STATUS</name>
          <description>RMT_CH0STATUS_REG.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEM_RADDR_EX</name>
              <description>reg_mem_raddr_ex_ch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE</name>
              <description>reg_state_ch0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_WADDR</name>
              <description>reg_apb_mem_waddr_ch0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RD_ERR</name>
              <description>reg_apb_mem_rd_err_ch0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_EMPTY</name>
              <description>reg_mem_empty_ch0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_WR_ERR</name>
              <description>reg_apb_mem_wr_err_ch0.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RADDR</name>
              <description>reg_apb_mem_raddr_ch0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1STATUS</name>
          <description>RMT_CH1STATUS_REG.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEM_RADDR_EX</name>
              <description>reg_mem_raddr_ex_ch1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE</name>
              <description>reg_state_ch1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_WADDR</name>
              <description>reg_apb_mem_waddr_ch1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RD_ERR</name>
              <description>reg_apb_mem_rd_err_ch1.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_EMPTY</name>
              <description>reg_mem_empty_ch1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_WR_ERR</name>
              <description>reg_apb_mem_wr_err_ch1.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RADDR</name>
              <description>reg_apb_mem_raddr_ch1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2STATUS</name>
          <description>RMT_CH2STATUS_REG.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEM_WADDR_EX</name>
              <description>reg_mem_waddr_ex_ch2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RADDR</name>
              <description>reg_apb_mem_raddr_ch2.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE</name>
              <description>reg_state_ch2.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_OWNER_ERR</name>
              <description>reg_mem_owner_err_ch2.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_FULL</name>
              <description>reg_mem_full_ch2.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RD_ERR</name>
              <description>reg_apb_mem_rd_err_ch2.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3STATUS</name>
          <description>RMT_CH3STATUS_REG.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEM_WADDR_EX</name>
              <description>reg_mem_waddr_ex_ch3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RADDR</name>
              <description>reg_apb_mem_raddr_ch3.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE</name>
              <description>reg_state_ch3.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_OWNER_ERR</name>
              <description>reg_mem_owner_err_ch3.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_FULL</name>
              <description>reg_mem_full_ch3.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RD_ERR</name>
              <description>reg_apb_mem_rd_err_ch3.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>RMT_INT_RAW_REG.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_END_INT_RAW</name>
              <description>reg_ch%s_tx_end_int_raw.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_END_INT_RAW</name>
              <description>reg_ch2_rx_end_int_raw.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_ERR_INT_RAW</name>
              <description>reg_ch%s_err_int_raw.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_ERR_INT_RAW</name>
              <description>reg_ch2_err_int_raw.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_RAW</name>
              <description>reg_ch%s_tx_thr_event_int_raw.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH2_RX_THR_EVENT_INT_RAW</name>
              <description>reg_ch2_rx_thr_event_int_raw.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH3_RX_THR_EVENT_INT_RAW</name>
              <description>reg_ch3_rx_thr_event_int_raw.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_LOOP_INT_RAW</name>
              <description>reg_ch%s_tx_loop_int_raw.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>RMT_INT_ST_REG.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_END_INT_ST</name>
              <description>reg_ch%s_tx_end_int_st.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_END_INT_ST</name>
              <description>reg_ch2_rx_end_int_st.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_ERR_INT_ST</name>
              <description>reg_ch%s_err_int_st.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_ERR_INT_ST</name>
              <description>reg_ch2_err_int_st.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_ST</name>
              <description>reg_ch%s_tx_thr_event_int_st.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH2_RX_THR_EVENT_INT_ST</name>
              <description>reg_ch2_rx_thr_event_int_st.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH3_RX_THR_EVENT_INT_ST</name>
              <description>reg_ch3_rx_thr_event_int_st.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_LOOP_INT_ST</name>
              <description>reg_ch%s_tx_loop_int_st.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>RMT_INT_ENA_REG.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_END_INT_ENA</name>
              <description>reg_ch%s_tx_end_int_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_END_INT_ENA</name>
              <description>reg_ch2_rx_end_int_ena.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_ERR_INT_ENA</name>
              <description>reg_ch%s_err_int_ena.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_ERR_INT_ENA</name>
              <description>reg_ch2_err_int_ena.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_ENA</name>
              <description>reg_ch%s_tx_thr_event_int_ena.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH2_RX_THR_EVENT_INT_ENA</name>
              <description>reg_ch2_rx_thr_event_int_ena.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH3_RX_THR_EVENT_INT_ENA</name>
              <description>reg_ch3_rx_thr_event_int_ena.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_LOOP_INT_ENA</name>
              <description>reg_ch%s_tx_loop_int_ena.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>RMT_INT_CLR_REG.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_END_INT_CLR</name>
              <description>reg_ch%s_tx_end_int_clr.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_END_INT_CLR</name>
              <description>reg_ch2_rx_end_int_clr.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_ERR_INT_CLR</name>
              <description>reg_ch%s_err_int_clr.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>2-3</dimIndex>
              <name>CH%s_RX_ERR_INT_CLR</name>
              <description>reg_ch2_err_int_clr.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_CLR</name>
              <description>reg_ch%s_tx_thr_event_int_clr.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH2_RX_THR_EVENT_INT_CLR</name>
              <description>reg_ch2_rx_thr_event_int_clr.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH3_RX_THR_EVENT_INT_CLR</name>
              <description>reg_ch3_rx_thr_event_int_clr.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>2</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-1</dimIndex>
              <name>CH%s_TX_LOOP_INT_CLR</name>
              <description>reg_ch%s_tx_loop_int_clr.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0CARRIER_DUTY</name>
          <description>RMT_CH0CARRIER_DUTY_REG.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400040</resetValue>
          <fields>
            <field>
              <name>CARRIER_LOW</name>
              <description>reg_carrier_low_ch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_HIGH</name>
              <description>reg_carrier_high_ch0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1CARRIER_DUTY</name>
          <description>RMT_CH1CARRIER_DUTY_REG.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400040</resetValue>
          <fields>
            <field>
              <name>CARRIER_LOW</name>
              <description>reg_carrier_low_ch1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_HIGH</name>
              <description>reg_carrier_high_ch1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_RX_CARRIER_RM</name>
          <description>RMT_CH2_RX_CARRIER_RM_REG.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CARRIER_LOW_THRES</name>
              <description>reg_carrier_low_thres_ch2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_HIGH_THRES</name>
              <description>reg_carrier_high_thres_ch2.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_RX_CARRIER_RM</name>
          <description>RMT_CH3_RX_CARRIER_RM_REG.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CARRIER_LOW_THRES</name>
              <description>reg_carrier_low_thres_ch3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_HIGH_THRES</name>
              <description>reg_carrier_high_thres_ch3.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-1</dimIndex>
          <name>CH%s_TX_LIM</name>
          <description>RMT_CH%s_TX_LIM_REG.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>TX_LIM</name>
              <description>reg_rmt_tx_lim_ch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LOOP_NUM</name>
              <description>reg_rmt_tx_loop_num_ch0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LOOP_CNT_EN</name>
              <description>reg_rmt_tx_loop_cnt_en_ch0.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOOP_COUNT_RESET</name>
              <description>reg_loop_count_reset_ch0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>2-3</dimIndex>
          <name>CH%s_RX_LIM</name>
          <description>RMT_CH2_RX_LIM_REG.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>RX_LIM</name>
              <description>reg_rmt_rx_lim_ch2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYS_CONF</name>
          <description>RMT_SYS_CONF_REG.</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x05000010</resetValue>
          <fields>
            <field>
              <name>APB_FIFO_MASK</name>
              <description>reg_apb_fifo_mask.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_CLK_FORCE_ON</name>
              <description>reg_mem_clk_force_on.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_FORCE_PD</name>
              <description>reg_rmt_mem_force_pd.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_FORCE_PU</name>
              <description>reg_rmt_mem_force_pu.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_NUM</name>
              <description>reg_rmt_sclk_div_num.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_A</name>
              <description>reg_rmt_sclk_div_a.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_B</name>
              <description>reg_rmt_sclk_div_b.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>reg_rmt_sclk_sel.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_ACTIVE</name>
              <description>reg_rmt_sclk_active.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>reg_clk_en.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_SIM</name>
          <description>RMT_TX_SIM_REG.</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_SIM_CH0</name>
              <description>reg_rmt_tx_sim_ch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SIM_CH1</name>
              <description>reg_rmt_tx_sim_ch1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SIM_EN</name>
              <description>reg_rmt_tx_sim_en.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REF_CNT_RST</name>
          <description>RMT_REF_CNT_RST_REG.</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CH0</name>
              <description>reg_ref_cnt_rst_ch0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH1</name>
              <description>reg_ref_cnt_rst_ch1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH2</name>
              <description>reg_ref_cnt_rst_ch2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH3</name>
              <description>reg_ref_cnt_rst_ch3.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>RMT_DATE_REG.</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02006231</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>reg_rmt_date.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RNG</name>
      <description>Hardware random number generator</description>
      <groupName>RNG</groupName>
      <baseAddress>0x60026000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DATA</name>
          <description>Random number data</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RSA</name>
      <description>RSA (Rivest Shamir Adleman) Accelerator</description>
      <groupName>RSA</groupName>
      <baseAddress>0x6003C000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x74</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RSA</name>
        <value>47</value>
      </interrupt>
      <registers>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>M_MEM[%s]</name>
          <description>The memory that stores M</description>
          <addressOffset>0x0</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Z_MEM[%s]</name>
          <description>The memory that stores Z</description>
          <addressOffset>0x200</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Y_MEM[%s]</name>
          <description>The memory that stores Y</description>
          <addressOffset>0x400</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>X_MEM[%s]</name>
          <description>The memory that stores X</description>
          <addressOffset>0x600</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>M_PRIME</name>
          <description>RSA M_prime register</description>
          <addressOffset>0x800</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>M_PRIME</name>
              <description>Those bits stores m'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODE</name>
          <description>RSA mode register</description>
          <addressOffset>0x804</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODE</name>
              <description>rsa mode (rsa length).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_CLEAN</name>
          <description>RSA query clean register</description>
          <addressOffset>0x808</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUERY_CLEAN</name>
              <description>query clean</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_START_MODEXP</name>
          <description>RSA modular exponentiation trigger register.</description>
          <addressOffset>0x80C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START_MODEXP</name>
              <description>start modular exponentiation</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_START_MODMULT</name>
          <description>RSA modular multiplication trigger register.</description>
          <addressOffset>0x810</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START_MODMULT</name>
              <description>start modular multiplication</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_START_MULT</name>
          <description>RSA normal multiplication trigger register.</description>
          <addressOffset>0x814</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START_MULT</name>
              <description>start multiplicaiton</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_IDLE</name>
          <description>RSA query idle register</description>
          <addressOffset>0x818</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUERY_IDLE</name>
              <description>query rsa idle. 1'b0: busy, 1'b1: idle</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>RSA interrupt clear register</description>
          <addressOffset>0x81C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLEAR_INTERRUPT</name>
              <description>set this bit to clear RSA interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONSTANT_TIME</name>
          <description>RSA constant time option register</description>
          <addressOffset>0x820</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CONSTANT_TIME</name>
              <description>Configure this bit to 0 for acceleration. 0: with acceleration, 1: without acceleration(defalut).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEARCH_ENABLE</name>
          <description>RSA search option</description>
          <addressOffset>0x824</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEARCH_ENABLE</name>
              <description>Configure this bit to 1 for acceleration. 1: with acceleration, 0: without acceleration(default). This option should be used together with RSA_SEARCH_POS.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEARCH_POS</name>
          <description>RSA search position configure register</description>
          <addressOffset>0x828</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEARCH_POS</name>
              <description>Configure this field to set search position. This field should be used together with RSA_SEARCH_ENABLE. The field is only meaningful when RSA_SEARCH_ENABLE is high.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>RSA interrupt enable register</description>
          <addressOffset>0x82C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INT_ENA</name>
              <description>Set this bit to enable interrupt that occurs when rsa calculation is done. 1'b0: disable, 1'b1: enable(default).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>RSA version control register</description>
          <addressOffset>0x830</addressOffset>
          <size>0x20</size>
          <resetValue>0x20200618</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>rsa version information</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC_CNTL</name>
      <description>Real-Time Clock Control</description>
      <groupName>RTC_CNTL</groupName>
      <baseAddress>0x60008000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x12C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RTC_CORE</name>
        <value>27</value>
      </interrupt>
      <registers>
        <register>
          <name>OPTIONS0</name>
          <description>rtc configure register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x1C00A000</resetValue>
          <fields>
            <field>
              <name>SW_STALL_APPCPU_C0</name>
              <description>{reg_sw_stall_appcpu_c1[5:0],  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_STALL_PROCPU_C0</name>
              <description>{reg_sw_stall_procpu_c1[5:0],  reg_sw_stall_procpu_c0[1:0]} == 0x86 will stall PRO CPU</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_APPCPU_RST</name>
              <description>APP CPU SW reset</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SW_PROCPU_RST</name>
              <description>PRO CPU SW reset</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BB_I2C_FORCE_PD</name>
              <description>BB_I2C force power down</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_I2C_FORCE_PU</name>
              <description>BB_I2C force power up</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_I2C_FORCE_PD</name>
              <description>BB_PLL _I2C force power down</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_I2C_FORCE_PU</name>
              <description>BB_PLL_I2C force power up</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_FORCE_PD</name>
              <description>BB_PLL force power down</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_FORCE_PU</name>
              <description>BB_PLL force power up</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_PD</name>
              <description>crystall force power down</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_PU</name>
              <description>crystall force power up</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EN_WAIT</name>
              <description>wait bias_sleep and current source wakeup</description>
              <bitOffset>14</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_SEL</name>
              <description>analog configure</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_ISO</name>
              <description>analog configure</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FORCE_ISO</name>
              <description>analog configure</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_FORCE_ISO</name>
              <description>analog configure</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_NOISO</name>
              <description>analog configure</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FORCE_NOISO</name>
              <description>analog configure</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_FORCE_NOISO</name>
              <description>analog configure</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_RST</name>
              <description>digital wrap force reset in deep sleep</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_NORST</name>
              <description>digital core force no reset in deep sleep</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_SYS_RST</name>
              <description>SW system reset</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_TIMER0</name>
          <description>rtc configure register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_VAL_LO</name>
              <description>configure the  sleep time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_TIMER1</name>
          <description>rtc configure register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_VAL_HI</name>
              <description>RTC sleep timer high 16 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAIN_TIMER_ALARM_EN</name>
              <description>timer alarm enable bit</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_UPDATE</name>
          <description>rtc configure register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_SYS_STALL</name>
              <description>Enable to record system stall time</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_XTL_OFF</name>
              <description>Enable to record 40M XTAL OFF time</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_SYS_RST</name>
              <description>enable to record system reset time</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_UPDATE</name>
              <description>Set 1: to update register with RTC timer</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_LOW0</name>
          <description>rtc configure register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_VALUE0_LOW</name>
              <description>RTC timer low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_HIGH0</name>
          <description>rtc configure register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_VALUE0_HIGH</name>
              <description>RTC timer high 16 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE0</name>
          <description>rtc configure register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SW_CPU_INT</name>
              <description>rtc software interrupt to main cpu</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_CAUSE_CLR</name>
              <description>clear rtc sleep reject cause</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB2RTC_BRIDGE_SEL</name>
              <description>1: APB to RTC using bridge</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_ACTIVE_IND</name>
              <description>SDIO active indication</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_WAKEUP</name>
              <description>leep wakeup bit</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_REJECT</name>
              <description>leep reject bit</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEP_EN</name>
              <description>sleep enable bit</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1</name>
          <description>rtc configure register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x28140403</resetValue>
          <fields>
            <field>
              <name>CPU_STALL_EN</name>
              <description>CPU stall enable bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_STALL_WAIT</name>
              <description>CPU stall wait cycles in fast_clk_rtc</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_WAIT</name>
              <description>CK8M wait cycles in slow_clk_rtc</description>
              <bitOffset>6</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_BUF_WAIT</name>
              <description>XTAL wait cycles in slow_clk_rtc</description>
              <bitOffset>14</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BUF_WAIT</name>
              <description>PLL wait cycles in slow_clk_rtc</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2</name>
          <description>rtc configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x01000000</resetValue>
          <fields>
            <field>
              <name>MIN_TIME_CK8M_OFF</name>
              <description>minimal cycles in slow_clk_rtc for CK8M in power down state</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER3</name>
          <description>rtc configure register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0A080A08</resetValue>
          <fields>
            <field>
              <name>WIFI_WAIT_TIMER</name>
              <description>wifi power domain wakeup time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_POWERUP_TIMER</name>
              <description>wifi power domain power on time</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_WAIT_TIMER</name>
              <description>bt power domain wakeup time</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_POWERUP_TIMER</name>
              <description>bt power domain power on time</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER4</name>
          <description>rtc configure register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x10200A08</resetValue>
          <fields>
            <field>
              <name>CPU_TOP_WAIT_TIMER</name>
              <description>cpu top power domain wakeup time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_POWERUP_TIMER</name>
              <description>cpu top power domain power on time</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_WAIT_TIMER</name>
              <description>digital wrap power domain wakeup time</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_POWERUP_TIMER</name>
              <description>digital wrap power domain power on time</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER5</name>
          <description>rtc configure register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MIN_SLP_VAL</name>
              <description>minimal sleep cycles in slow_clk_rtc</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER6</name>
          <description>rtc configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x0A080000</resetValue>
          <fields>
            <field>
              <name>DG_PERI_WAIT_TIMER</name>
              <description>digital peri power domain wakeup time</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_POWERUP_TIMER</name>
              <description>digital peri power domain power on time</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00C40000</resetValue>
          <fields>
            <field>
              <name>RESET_POR_FORCE_PD</name>
              <description>force no bypass i2c power on reset</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET_POR_FORCE_PU</name>
              <description>force bypass i2c power on reset</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_RST_EN</name>
              <description>enable glitch reset</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_PU</name>
              <description>PLLA force power up</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLLA_FORCE_PD</name>
              <description>PLLA force power down</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLLA_FORCE_PU</name>
              <description>PLLA force power up</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_CAL_SLP_START</name>
              <description>start BBPLL calibration during sleep</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PVTMON_PU</name>
              <description>1: PVTMON power up</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRF_I2C_PU</name>
              <description>1: TXRF_I2C power up</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFRX_PBUS_PU</name>
              <description>1: RFRX_PBUS power up</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CKGEN_I2C_PU</name>
              <description>1: CKGEN_I2C power up</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_I2C_PU</name>
              <description>power up pll i2c</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESET_STATE</name>
          <description>rtc configure register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003000</resetValue>
          <fields>
            <field>
              <name>RESET_CAUSE_PROCPU</name>
              <description>reset cause of PRO CPU</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_CAUSE_APPCPU</name>
              <description>reset cause of APP CPU</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STAT_VECTOR_SEL_APPCPU</name>
              <description>APP CPU state vector sel</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STAT_VECTOR_SEL_PROCPU</name>
              <description>PRO CPU state vector sel</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALL_RESET_FLAG_PROCPU</name>
              <description>PRO CPU reset_flag</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALL_RESET_FLAG_APPCPU</name>
              <description>APP CPU reset flag</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALL_RESET_FLAG_CLR_PROCPU</name>
              <description>clear PRO CPU reset_flag</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ALL_RESET_FLAG_CLR_APPCPU</name>
              <description>clear APP CPU reset flag</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OCD_HALT_ON_RESET_APPCPU</name>
              <description>APPCPU OcdHaltOnReset</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCD_HALT_ON_RESET_PROCPU</name>
              <description>PROCPU OcdHaltOnReset</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>JTAG_RESET_FLAG_PROCPU</name>
              <description>configure jtag reset configure</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>JTAG_RESET_FLAG_APPCPU</name>
              <description>configure jtag reset configure</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>JTAG_RESET_FLAG_CLR_PROCPU</name>
              <description>configure jtag reset configure</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>JTAG_RESET_FLAG_CLR_APPCPU</name>
              <description>configure jtag reset configure</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DRESET_MASK_APPCPU</name>
              <description>configure dreset configure</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRESET_MASK_PROCPU</name>
              <description>configure dreset configure</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUP_STATE</name>
          <description>rtc configure register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00060000</resetValue>
          <fields>
            <field>
              <name>WAKEUP_ENA</name>
              <description>wakeup enable bitmap</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_RTC</name>
          <description>rtc configure register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ENA</name>
              <description>enable sleep wakeup interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ENA</name>
              <description>enable sleep reject interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_INT_ENA</name>
              <description>enable RTC WDT interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ENA</name>
              <description>enable brown out interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_ENA</name>
              <description>enable RTC main timer interrupt</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_INT_ENA</name>
              <description>enable super watch dog interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_ENA</name>
              <description>enable xtal32k_dead  interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ENA</name>
              <description>enbale gitch det interrupt</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_CAL_INT_ENA</name>
              <description>enbale bbpll cal end interrupt</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_RTC</name>
          <description>rtc configure register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_RAW</name>
              <description>sleep wakeup interrupt raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_RAW</name>
              <description>sleep reject interrupt raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_INT_RAW</name>
              <description>RTC WDT interrupt raw</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_RAW</name>
              <description>brown out interrupt raw</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_RAW</name>
              <description>RTC main timer interrupt raw</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_INT_RAW</name>
              <description>super watch dog interrupt raw</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_RAW</name>
              <description>xtal32k dead detection interrupt raw</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_RAW</name>
              <description>glitch_det_interrupt_raw</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BBPLL_CAL_INT_RAW</name>
              <description>bbpll cal end interrupt state</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_RTC</name>
          <description>rtc configure register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ST</name>
              <description>sleep wakeup interrupt state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ST</name>
              <description>sleep reject interrupt state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_INT_ST</name>
              <description>RTC WDT interrupt state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ST</name>
              <description>brown out interrupt state</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_ST</name>
              <description>RTC main timer interrupt state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_INT_ST</name>
              <description>super watch dog interrupt state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_ST</name>
              <description>xtal32k dead detection interrupt state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ST</name>
              <description>glitch_det_interrupt state</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BBPLL_CAL_INT_ST</name>
              <description>bbpll cal end interrupt state</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_RTC</name>
          <description>rtc configure register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_CLR</name>
              <description>Clear sleep wakeup interrupt state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_CLR</name>
              <description>Clear sleep reject interrupt state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WDT_INT_CLR</name>
              <description>Clear RTC WDT interrupt state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_CLR</name>
              <description>Clear brown out interrupt state</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_CLR</name>
              <description>Clear RTC main timer interrupt state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_INT_CLR</name>
              <description>Clear super watch dog interrupt state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_CLR</name>
              <description>Clear RTC WDT interrupt state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_CLR</name>
              <description>Clear glitch det interrupt state</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BBPLL_CAL_INT_CLR</name>
              <description>clear bbpll cal end interrupt state</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE0</name>
          <description>rtc configure register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH0</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE1</name>
          <description>rtc configure register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH1</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE2</name>
          <description>rtc configure register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH2</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE3</name>
          <description>rtc configure register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH3</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_XTL_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00066C80</resetValue>
          <fields>
            <field>
              <name>XTAL32K_WDT_EN</name>
              <description>xtal 32k watch dog enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_CLK_FO</name>
              <description>xtal 32k watch dog clock force on</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_RESET</name>
              <description>xtal 32k watch dog sw reset</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_EXT_CLK_FO</name>
              <description>xtal 32k external xtal clock force on</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_BACKUP</name>
              <description>xtal 32k switch to back up clock when xtal is dead</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_RESTART</name>
              <description>xtal 32k restart xtal when xtal is dead</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_RETURN</name>
              <description>xtal 32k switch back xtal when xtal is restarted</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_XPD_FORCE</name>
              <description>Xtal 32k xpd control by sw or fsm</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCKINIT_XTAL_32K</name>
              <description>apply an internal clock to help xtal 32k to start</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUF_XTAL_32K</name>
              <description>0: single-end buffer 1: differential buffer</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DGM_XTAL_32K</name>
              <description>xtal_32k gm control</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRES_XTAL_32K</name>
              <description>DRES_XTAL_32K</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_XTAL_32K</name>
              <description>XPD_XTAL_32K</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_XTAL_32K</name>
              <description>DAC_XTAL_32K</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STATE</name>
              <description>state of 32k_wdt</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_GPIO_SEL</name>
              <description>XTAL_32K sel. 0: external XTAL_32K</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_LV</name>
              <description>0: power down XTAL at high level</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_EN</name>
              <description>enable gpio configure xtal power on</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_WAKEUP_FILTER</name>
              <description>enable filter for gpio wakeup event</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_REJECT_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLEEP_REJECT_ENA</name>
              <description>sleep reject enable</description>
              <bitOffset>12</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LIGHT_SLP_REJECT_EN</name>
              <description>enable reject for light sleep</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEEP_SLP_REJECT_EN</name>
              <description>enable reject for deep sleep</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_PERIOD_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPUSEL_CONF</name>
              <description>CPU sel option</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPUPERIOD_SEL</name>
              <description>CPU clk sel option</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x11583218</resetValue>
          <fields>
            <field>
              <name>EFUSE_CLK_FORCE_GATING</name>
              <description>efuse_clk_force_gating</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_CLK_FORCE_NOGATING</name>
              <description>efuse_clk_force_nogating</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV_SEL_VLD</name>
              <description>used to sync reg_ck8m_div_sel bus. Clear vld before set reg_ck8m_div_sel</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV</name>
              <description>CK8M_D256_OUT divider. 00: div128</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_CK8M</name>
              <description>disable CK8M and CK8M_D256_OUT</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_CK8M_DIV</name>
              <description>1: CK8M_D256_OUT is actually CK8M</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_XTAL32K_EN</name>
              <description>enable CK_XTAL_32K for digital core (no relationship with RTC core)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_CLK8M_D256_EN</name>
              <description>enable CK8M_D256_OUT for digital core (no relationship with RTC core)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_CLK8M_EN</name>
              <description>enable CK8M for digital core (no relationship with RTC core)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV_SEL</name>
              <description>divider = reg_ck8m_div_sel + 1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_FORCE_NOGATING</name>
              <description>XTAL force no gating during sleep</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_NOGATING</name>
              <description>CK8M force no gating during sleep</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DFREQ</name>
              <description>CK8M_DFREQ</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_PD</name>
              <description>CK8M force power down</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_PU</name>
              <description>CK8M force power up</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GLOBAL_FORCE_GATING</name>
              <description>force enable xtal clk gating</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GLOBAL_FORCE_NOGATING</name>
              <description>force bypass xtal clk gating</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_CLK_RTC_SEL</name>
              <description>fast_clk_rtc sel. 0: XTAL div 4</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANA_CLK_RTC_SEL</name>
              <description>slelect rtc slow clk</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLOW_CLK_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400000</resetValue>
          <fields>
            <field>
              <name>ANA_CLK_DIV_VLD</name>
              <description>used to sync div bus. clear vld before set reg_rtc_ana_clk_div</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANA_CLK_DIV</name>
              <description>the clk divider num of RTC_CLK</description>
              <bitOffset>23</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOW_CLK_NEXT_EDGE</name>
              <description>flag rtc_slow_clk_next_edge</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x0AB0BE0A</resetValue>
          <fields>
            <field>
              <name>SDIO_TIMER_TARGET</name>
              <description>timer count to apply reg_sdio_dcap after sdio power on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DTHDRV</name>
              <description>Tieh = 1 mode drive ability. Initially set to 0 to limit charge current</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DCAP</name>
              <description>ability to prevent LDO from overshoot</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INITI</name>
              <description>add resistor from ldo output to ground. 0: no res</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_EN_INITI</name>
              <description>0 to set init[1:0]=0</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DCURLIM</name>
              <description>tune current limit threshold when tieh = 0. About 800mA/(8+d)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_MODECURLIM</name>
              <description>select current limit mode</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_ENCURLIM</name>
              <description>enable current limit</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_REG_PD_EN</name>
              <description>power down SDIO_REG in sleep. Only active when reg_sdio_force = 0</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_FORCE</name>
              <description>1: use SW option to control SDIO_REG</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_TIEH</name>
              <description>SW option for SDIO_TIEH. Only active when reg_sdio_force = 1</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>_1P8_READY</name>
              <description>read only register for REG1P8_READY</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DREFL_SDIO</name>
              <description>SW option for DREFL_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DREFM_SDIO</name>
              <description>SW option for DREFM_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DREFH_SDIO</name>
              <description>SW option for DREFH_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SDIO</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BIAS_CONF</name>
          <description>rtc configure register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010800</resetValue>
          <fields>
            <field>
              <name>DG_VDD_DRV_B_SLP</name>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_VDD_DRV_B_SLP_EN</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_IDLE</name>
              <description>bias buf when rtc in normal work state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_WAKE</name>
              <description>bias buf when rtc in wakeup state</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_DEEP_SLP</name>
              <description>bias buf when rtc in sleep state</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_MONITOR</name>
              <description>bias buf when rtc in monitor state</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_CUR_DEEP_SLP</name>
              <description>xpd cur when rtc in sleep_state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_CUR_MONITOR</name>
              <description>xpd cur when rtc in monitor state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_SLEEP_DEEP_SLP</name>
              <description>bias_sleep when rtc in sleep_state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_SLEEP_MONITOR</name>
              <description>bias_sleep when rtc in monitor state</description>
              <bitOffset>17</bitOffset>
